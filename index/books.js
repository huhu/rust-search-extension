var C=["3. Background And Concepts","4. Tutorial","5. Reference","1. Introduction","introduction","3. Prerequisites","4. Commands","5. Tutorials","5.1. Hybrid applications with Webpack","5.2. npm browser packages","5.2.1. Getting started","5.2.2. Template deep dive","1. A command line app in 15 minutes","2. In-depth topics","3. Breaking changes","6. The library team","3. Library Usage with build.rs","3.1. Tutorial","5. Customizing the Generated Bindings","1. Examples","reference/index","2. Reference","2.17. Supported Types","2.18. #[wasm_bindgen] Attributes","2.18.1. On JavaScript Imports","2.18.2. On Rust Exports","3. web-sys","4. Testing with wasm-bindgen-test","5. Contributing to wasm-bindgen","5.2. Internal Design","5.3. js-sys","5.4. web-sys","Introduction","1. Fuzzing with cargo-fuzz","1.7. Fuzzing on Windows","2. Fuzzing with afl.rs","1. What is Chalk?","3. Representing and manipulating types","3.2. Rust types","3.4. Operations","4. Lowering Rust IR to logic","5. Canonical queries","6. Chalk engine","6.2. Logic","7. Chalk recursive solver","glossary","3. Data layout","4. Validity","5. Optimizations","2. Idioms","2.9. Foreign function interface (FFI)","3. Design Patterns","3.1. Behavioural","3.2. Creational","3.3. Structural","3.4. Foreign function interface (FFI)","4. Anti-patterns","5. Functional Programming","6. Additional Resources","2. A Bad Stack","3. An Ok Stack","4. A Persistent Stack","5. A Bad Safe Deque","6. An Ok Unsafe Queue","7. A Production Unsafe Deque","8. A Bunch of Silly Lists","1. Floating-point Math","2. Target features","5. Performance profiling","Effective Rust","1. Types","2. Traits","3. Concepts","4. Dependencies","visibility","documentation","5. Tooling","6. Beyond Standard Rust","Demystifying Async/Await in Rust","2. Terminology","3. Let's Build a Runtime","2. Section 1 - Hello Rust","3. Section 2 - Stretch Goals","4. Section 3 - Generating Maps","5. Section 4 - Making A Game","2. Using the Wasmtime CLI","3. Using the Wasmtime API","3.12. WASIp2","3.16. Debugging WebAssembly","3.17. Profiling WebAssembly","stability","4. Stability","5. Security","contributing","6. Contributing","6.12. Maintainer Guidelines"];var N=N;const booksIndex=[{"name":"Rust and WebAssembly Book","url":"https://rustwasm.github.io/docs/book/","pages":[[C[3],C[4],N],["2. Why Rust and WebAssembly?","why-rust-and-webassembly",N],[C[0],"background-and-concepts",N],["3.1. What is WebAssembly?","what-is-webassembly",[C[0]]],[C[1],"game-of-life/introduction",N],["4.1. Setup","game-of-life/setup",[C[1]]],["4.2. Hello, World!","game-of-life/hello-world",[C[1]]],["4.3. Rules","game-of-life/rules",[C[1]]],["4.4. Implementing Life","game-of-life/implementing",[C[1]]],["4.5. Testing Life","game-of-life/testing",[C[1]]],["4.6. Debugging","game-of-life/debugging",[C[1]]],["4.7. Adding Interactivity","game-of-life/interactivity",[C[1]]],["4.8. Time Profiling","game-of-life/time-profiling",[C[1]]],["4.9. Shrinking .wasm Size","game-of-life/code-size",[C[1]]],["4.10. Publishing to npm","game-of-life/publishing-to-npm",[C[1]]],[C[2],C[20],N],["5.1. Crates You Should Know","reference/crates",[C[2]]],["5.2. Tools You Should Know","reference/tools",[C[2]]],["5.3. Project Templates","reference/project-templates",[C[2]]],["5.4. Debugging","reference/debugging",[C[2]]],["5.5. Time Profiling","reference/time-profiling",[C[2]]],["5.6. Shrinking .wasm Size","reference/code-size",[C[2]]],["5.7. JavaScript Interoperation","reference/js-ffi",[C[2]]],["5.8. Which Crates Will Work Off-the-Shelf with WebAssembly?","reference/which-crates-work-with-wasm",[C[2]]],["5.9. How to Add WebAssembly Support to a General-Purpose Crate","reference/add-wasm-support-to-crate",[C[2]]],["5.10. Deploying Rust and WebAssembly to Production","reference/deploying-to-production",[C[2]]]]},{"name":"Wasm-Pack Book","url":"https://rustwasm.github.io/docs/wasm-pack/","pages":[[C[3],C[4],N],["2. Quickstart","quickstart",N],[C[5],"prerequisites/index",N],["3.1. npm (optional)","prerequisites/npm",[C[5]]],["3.2. considerations","prerequisites/considerations",[C[5]]],["3.3. Non-rustup setups","prerequisites/non-rustup-setups",[C[5]]],[C[6],"commands/index",N],["4.1. new","commands/new",[C[6]]],["4.2. build","commands/build",[C[6]]],["4.3. test","commands/test",[C[6]]],["4.4. pack and publish","commands/pack-and-publish",[C[6]]],["4.5. init (DEPRECATED)","commands/init",[C[6]]],[C[7],"tutorials/index",N],[C[8],"tutorials/hybrid-applications-with-webpack/index",[C[7]]],["5.1.1. Getting started","tutorials/hybrid-applications-with-webpack/getting-started",[C[7],C[8]]],["5.1.2. Using your library","tutorials/hybrid-applications-with-webpack/using-your-library",[C[7],C[8]]],[C[9],"tutorials/npm-browser-packages/index",[C[7]]],[C[10],"tutorials/npm-browser-packages/getting-started",[C[7],C[9]]],["5.2.1.1. Manual Setup","tutorials/npm-browser-packages/getting-started/manual-setup",[C[7],C[9],C[10]]],[C[11],"tutorials/npm-browser-packages/template-deep-dive/index",[C[7],C[9]]],["5.2.2.1. Cargo.toml","tutorials/npm-browser-packages/template-deep-dive/cargo-toml",[C[7],C[9],C[11]]],["5.2.2.2. src/lib.rs","tutorials/npm-browser-packages/template-deep-dive/src-lib-rs",[C[7],C[9],C[11]]],["5.2.2.3. src/utils.rs","tutorials/npm-browser-packages/template-deep-dive/src-utils-rs",[C[7],C[9],C[11]]],["5.2.2.4. wee_alloc","tutorials/npm-browser-packages/template-deep-dive/wee_alloc",[C[7],C[9],C[11]]],["5.2.2.5. tests/web.rs","tutorials/npm-browser-packages/template-deep-dive/tests-web-rs",[C[7],C[9],C[11]]],["5.2.3. Building your project","tutorials/npm-browser-packages/building-your-project",[C[7],C[9]]],["5.2.4. Testing your project","tutorials/npm-browser-packages/testing-your-project",[C[7],C[9]]],["5.2.5. Packaging and publishing","tutorials/npm-browser-packages/packaging-and-publishing",[C[7],C[9]]],["5.2.6. Using your library","tutorials/npm-browser-packages/using-your-library",[C[7],C[9]]],["6. Cargo.toml Configuration","cargo-toml-configuration",N],["7. Contributing",C[93],N]]},{"name":"Command line apps in Rust","url":"https://rust-cli.github.io/book/","pages":[["Getting started","index",N],[C[12],"tutorial/index",N],["1.1. Project setup","tutorial/setup",[C[12]]],["1.2. Parsing command line arguments","tutorial/cli-args",[C[12]]],["1.3. First implementation","tutorial/impl-draft",[C[12]]],["1.4. Nicer error reporting","tutorial/errors",[C[12]]],["1.5. Output for humans and machines","tutorial/output",[C[12]]],["1.6. Testing","tutorial/testing",[C[12]]],["1.7. Packaging and distributing a Rust tool","tutorial/packaging",[C[12]]],[C[13],"in-depth/index",N],["2.1. Signal handling","in-depth/signals",[C[13]]],["2.2. Using config files","in-depth/config-files",[C[13]]],["2.3. Exit codes","in-depth/exit-code",[C[13]]],["2.4. Communicating with humans","in-depth/human-communication",[C[13]]],["2.5. Communicating with machines","in-depth/machine-communication",[C[13]]],["2.6. Rendering documentation for your CLI apps","in-depth/docs",[C[13]]],["3. Resources","resources/index",N]]},{"name":"Standard library developers Guide","url":"https://std-dev-guide.rust-lang.org/","pages":[["1. About this Guide","about",N],[C[14],"breaking-changes/summary",N],["3.1. New trait implementations","breaking-changes/new-trait-impls",[C[14]]],["3.2. Prelude","breaking-changes/prelude",[C[14]]],["3.3. Doc changes","breaking-changes/doc-changes",[C[14]]],[C[15],"team/summary",N],["6.1. Meetings","team/meetings",[C[15]]],["6.2. Membership","team/membership",[C[15]]],["6.3. Reviewing","team/reviewing",[C[15]]]]},{"name":"Rust bindgen User Guide","url":"https://rust-lang.github.io/rust-bindgen/","pages":[[C[3],C[4],N],["2. Requirements","requirements",N],[C[16],"library-usage",N],[C[17],"tutorial-0",[C[16]]],["3.1.1. Add bindgen as a Build Dependency","tutorial-1",[C[16],C[17]]],["3.1.2. Create a wrapper.h Header","tutorial-2",[C[16],C[17]]],["3.1.3. Create a build.rs File","tutorial-3",[C[16],C[17]]],["3.1.4. Include the Generated Bindings in src/lib.rs","tutorial-4",[C[16],C[17]]],["3.1.5. Write a Smoke Test","tutorial-5",[C[16],C[17]]],["3.1.6. Publish Your Crate!","tutorial-6",[C[16],C[17]]],["3.2. Bindings for Non-System Libraries","non-system-libraries",[C[16]]],["4. Command Line Usage","command-line-usage",N],[C[18],"customizing-generated-bindings",N],["5.1. Allowlisting","allowlisting",[C[18]]],["5.2. Blocklisting","blocklisting",[C[18]]],["5.3. Treating a Type as an Opaque Blob of Bytes","opaque",[C[18]]],["5.4. Replacing One Type with Another","replacing-types",[C[18]]],["5.5. Preventing the Derivation of Copy and Clone","nocopy",[C[18]]],["5.6. Preventing the Derivation of Debug","nodebug",[C[18]]],["5.7. Preventing the Derivation of Default","nodefault",[C[18]]],["5.8. Annotating Types with #[must-use]","must-use-types",[C[18]]],["5.9. Field Visibility",C[74],[C[18]]],["5.10. Code Formatting","code-formatting",[C[18]]],["6. Generating Bindings to C++","cpp",N],["7. Generating Bindings to Objective-C","objc",N],["8. Using Unions","using-unions",N],["9. Using Bitfields","using-bitfields",N],["10. Using Flexible Array Members","using-fam",N],["11. FAQ","faq",N]]},{"name":"The wasm-bindgen Guide","url":"https://rustwasm.github.io/docs/wasm-bindgen/","pages":[[C[32],C[4],N],[C[19],"examples/index",N],["1.1. Hello, World!","examples/hello-world",[C[19]]],["1.2. Using console.log","examples/console-log",[C[19]]],["1.3. Small Wasm files","examples/add",[C[19]]],["1.4. Without a Bundler","examples/without-a-bundler",[C[19]]],["1.5. Synchronous Instantiation","examples/synchronous-instantiation",[C[19]]],["1.6. Importing functions from JS","examples/import-js",[C[19]]],["1.7. Working with char","examples/char",[C[19]]],["1.8. js-sys: WebAssembly in WebAssembly","examples/wasm-in-wasm",[C[19]]],["1.9. web-sys: DOM hello world","examples/dom",[C[19]]],["1.10. web-sys: Closures","examples/closures",[C[19]]],["1.11. web-sys: performance.now","examples/performance",[C[19]]],["1.12. web-sys: using fetch","examples/fetch",[C[19]]],["1.13. web-sys: Weather report","examples/weather_report",[C[19]]],["1.14. web-sys: canvas hello world","examples/2d-canvas",[C[19]]],["1.15. web-sys: canvas Julia set","examples/julia",[C[19]]],["1.16. web-sys: WebAudio","examples/web-audio",[C[19]]],["1.17. web-sys: WebGL","examples/webgl",[C[19]]],["1.18. web-sys: WebSockets","examples/websockets",[C[19]]],["1.19. web-sys: WebRTC DataChannel","examples/webrtc_datachannel",[C[19]]],["1.20. web-sys: requestAnimationFrame","examples/request-animation-frame",[C[19]]],["1.21. web-sys: A Simple Paint Program","examples/paint",[C[19]]],["1.22. web-sys: Wasm in Web Worker","examples/wasm-in-web-worker",[C[19]]],["1.23. Parallel Raytracing","examples/raytrace",[C[19]]],["1.24. Wasm Audio Worklet","examples/wasm-audio-worklet",[C[19]]],["1.25. web-sys: A TODO MVC App","examples/todomvc",[C[19]]],[C[21],C[20],N],["2.1. Deployment","reference/deployment",[C[21]]],["2.2. JS snippets","reference/js-snippets",[C[21]]],["2.3. Static JS Objects","reference/static-js-objects",[C[21]]],["2.4. Passing Rust Closures to JS","reference/passing-rust-closures-to-js",[C[21]]],["2.5. Receiving JS Closures in Rust","reference/receiving-js-closures-in-rust",[C[21]]],["2.6. Promises and Futures","reference/js-promises-and-rust-futures",[C[21]]],["2.7. Iterating over JS Values","reference/iterating-over-js-values",[C[21]]],["2.8. Arbitrary Data with Serde","reference/arbitrary-data-with-serde",[C[21]]],["2.9. Accessing Properties of Untyped JS Values","reference/accessing-properties-of-untyped-js-values",[C[21]]],["2.10. Working with Duck-Typed Interfaces","reference/working-with-duck-typed-interfaces",[C[21]]],["2.11. Command Line Interface","reference/cli",[C[21]]],["2.12. Optimizing for Size","reference/optimize-size",[C[21]]],["2.13. Supported Rust Targets","reference/rust-targets",[C[21]]],["2.14. Supported Browsers","reference/browser-support",[C[21]]],["2.15. Support for Weak References","reference/weak-references",[C[21]]],["2.16. Support for Reference Types","reference/reference-types",[C[21]]],[C[22],"reference/types",[C[21]]],["2.17.1. Imported JavaScript Types","reference/types/imported-js-types",[C[21],C[22]]],["2.17.2. Exported Rust Types","reference/types/exported-rust-types",[C[21],C[22]]],["2.17.3. JsValue","reference/types/jsvalue",[C[21],C[22]]],["2.17.4. Box<[T]> and Vec","reference/types/boxed-slices",[C[21],C[22]]],["2.17.5. *const T and *mut T","reference/types/pointers",[C[21],C[22]]],["2.17.6. NonNull","reference/types/non-null",[C[21],C[22]]],["2.17.7. Numbers","reference/types/numbers",[C[21],C[22]]],["2.17.8. bool","reference/types/bool",[C[21],C[22]]],["2.17.9. char","reference/types/char",[C[21],C[22]]],["2.17.10. str","reference/types/str",[C[21],C[22]]],["2.17.11. String","reference/types/string",[C[21],C[22]]],["2.17.12. Number Slices","reference/types/number-slices",[C[21],C[22]]],["2.17.13. Boxed Number Slices","reference/types/boxed-number-slices",[C[21],C[22]]],["2.17.14. Result<T, E>","reference/types/result",[C[21],C[22]]],[C[23],"reference/attributes/index",[C[21]]],[C[24],"reference/attributes/on-js-imports/index",[C[21],C[23]]],["2.18.1.1. catch","reference/attributes/on-js-imports/catch",[C[21],C[23],C[24]]],["2.18.1.2. constructor","reference/attributes/on-js-imports/constructor",[C[21],C[23],C[24]]],["2.18.1.3. extends","reference/attributes/on-js-imports/extends",[C[21],C[23],C[24]]],["2.18.1.4. getter and setter","reference/attributes/on-js-imports/getter-and-setter",[C[21],C[23],C[24]]],["2.18.1.5. final","reference/attributes/on-js-imports/final",[C[21],C[23],C[24]]],["2.18.1.6. indexing_getter, indexing_setter, and indexing_deleter","reference/attributes/on-js-imports/indexing-getter-setter-deleter",[C[21],C[23],C[24]]],["2.18.1.7. js_class = \"Blah\"","reference/attributes/on-js-imports/js_class",[C[21],C[23],C[24]]],["2.18.1.8. js_name","reference/attributes/on-js-imports/js_name",[C[21],C[23],C[24]]],["2.18.1.9. js_namespace","reference/attributes/on-js-imports/js_namespace",[C[21],C[23],C[24]]],["2.18.1.10. method","reference/attributes/on-js-imports/method",[C[21],C[23],C[24]]],["2.18.1.11. module = \"blah\"","reference/attributes/on-js-imports/module",[C[21],C[23],C[24]]],["2.18.1.12. raw_module = \"blah\"","reference/attributes/on-js-imports/raw_module",[C[21],C[23],C[24]]],["2.18.1.13. no_deref","reference/attributes/on-js-imports/no_deref",[C[21],C[23],C[24]]],["2.18.1.14. static_method_of = Blah","reference/attributes/on-js-imports/static_method_of",[C[21],C[23],C[24]]],["2.18.1.15. structural","reference/attributes/on-js-imports/structural",[C[21],C[23],C[24]]],["2.18.1.16. typescript_type","reference/attributes/on-js-imports/typescript_type",[C[21],C[23],C[24]]],["2.18.1.17. variadic","reference/attributes/on-js-imports/variadic",[C[21],C[23],C[24]]],["2.18.1.18. vendor_prefix","reference/attributes/on-js-imports/vendor_prefix",[C[21],C[23],C[24]]],[C[25],"reference/attributes/on-rust-exports/index",[C[21],C[23]]],["2.18.2.1. constructor","reference/attributes/on-rust-exports/constructor",[C[21],C[23],C[25]]],["2.18.2.2. js_name = Blah","reference/attributes/on-rust-exports/js_name",[C[21],C[23],C[25]]],["2.18.2.3. js_class = Blah","reference/attributes/on-rust-exports/js_class",[C[21],C[23],C[25]]],["2.18.2.4. readonly","reference/attributes/on-rust-exports/readonly",[C[21],C[23],C[25]]],["2.18.2.5. skip","reference/attributes/on-rust-exports/skip",[C[21],C[23],C[25]]],["2.18.2.6. skip_jsdoc","reference/attributes/on-rust-exports/skip_jsdoc",[C[21],C[23],C[25]]],["2.18.2.7. start","reference/attributes/on-rust-exports/start",[C[21],C[23],C[25]]],["2.18.2.8. main","reference/attributes/on-rust-exports/main",[C[21],C[23],C[25]]],["2.18.2.9. typescript_custom_section","reference/attributes/on-rust-exports/typescript_custom_section",[C[21],C[23],C[25]]],["2.18.2.10. getter and setter","reference/attributes/on-rust-exports/getter-and-setter",[C[21],C[23],C[25]]],["2.18.2.11. inspectable","reference/attributes/on-rust-exports/inspectable",[C[21],C[23],C[25]]],["2.18.2.12. skip_typescript","reference/attributes/on-rust-exports/skip_typescript",[C[21],C[23],C[25]]],["2.18.2.13. getter_with_clone","reference/attributes/on-rust-exports/getter_with_clone",[C[21],C[23],C[25]]],["2.18.2.14. unchecked_return_type and unchecked_param_type","reference/attributes/on-rust-exports/unchecked_type",[C[21],C[23],C[25]]],["2.18.2.15. return_description and param_description","reference/attributes/on-rust-exports/description",[C[21],C[23],C[25]]],[C[26],"web-sys/index",N],["3.1. Using web-sys","web-sys/using-web-sys",[C[26]]],["3.2. Cargo Features","web-sys/cargo-features",[C[26]]],["3.3. Function Overloads","web-sys/function-overloads",[C[26]]],["3.4. Type Translations","web-sys/type-translations",[C[26]]],["3.5. Inheritance","web-sys/inheritance",[C[26]]],["3.6. Unstable APIs","web-sys/unstable-apis",[C[26]]],[C[27],"wasm-bindgen-test/index",N],["4.1. Usage","wasm-bindgen-test/usage",[C[27]]],["4.2. Writing Asynchronous Tests","wasm-bindgen-test/asynchronous-tests",[C[27]]],["4.3. Testing in Headless Browsers","wasm-bindgen-test/browsers",[C[27]]],["4.4. Continuous Integration","wasm-bindgen-test/continuous-integration",[C[27]]],["4.5. Coverage (Experimental)","wasm-bindgen-test/coverage",[C[27]]],[C[28],"contributing/index",N],["5.1. Testing","contributing/testing",[C[28]]],[C[29],"contributing/design/index",[C[28]]],["5.2.1. JS Objects in Rust","contributing/design/js-objects-in-rust",[C[28],C[29]]],["5.2.2. Exporting a function to JS","contributing/design/exporting-rust",[C[28],C[29]]],["5.2.3. Exporting a struct to JS","contributing/design/exporting-rust-struct",[C[28],C[29]]],["5.2.4. Importing a function from JS","contributing/design/importing-js",[C[28],C[29]]],["5.2.5. Importing a class from JS","contributing/design/importing-js-struct",[C[28],C[29]]],["5.2.6. Rust Type conversions","contributing/design/rust-type-conversions",[C[28],C[29]]],["5.2.7. Types in wasm-bindgen","contributing/design/describe",[C[28],C[29]]],[C[30],"contributing/js-sys/index",[C[28]]],["5.3.1. Testing","contributing/js-sys/testing",[C[28],C[30]]],["5.3.2. Adding More APIs","contributing/js-sys/adding-more-apis",[C[28],C[30]]],[C[31],"contributing/web-sys/index",[C[28]]],["5.4.1. Overview","contributing/web-sys/overview",[C[28],C[31]]],["5.4.2. Testing","contributing/web-sys/testing",[C[28],C[31]]],["5.4.3. Logging","contributing/web-sys/logging",[C[28],C[31]]],["5.4.4. Supporting More Web APIs","contributing/web-sys/supporting-more-web-apis",[C[28],C[31]]],["5.5. Publishing","contributing/publishing",[C[28]]],["5.6. Team","contributing/team",[C[28]]]]},{"name":"Rust API Guidelines","url":"https://rust-lang.github.io/api-guidelines/","pages":[["About","about",N],["Checklist","checklist",N],["1. Naming","naming",N],["2. Interoperability","interoperability",N],["3. Macros","macros",N],["4. Documentation",C[75],N],["5. Predictability","predictability",N],["6. Flexibility","flexibility",N],["7. Type safety","type-safety",N],["8. Dependability","dependability",N],["9. Debuggability","debuggability",N],["10. Future proofing","future-proofing",N],["11. Necessities","necessities",N],["External links","external-links",N]]},{"name":"Rust Fuzz Book","url":"https://rust-fuzz.github.io/book/","pages":[[C[32],C[4],N],[C[33],"cargo-fuzz",N],["1.1. Setup","cargo-fuzz/setup",[C[33]]],["1.2. Tutorial","cargo-fuzz/tutorial",[C[33]]],["1.3. Guide","cargo-fuzz/guide",[C[33]]],["1.4. Structure-Aware Fuzzing","cargo-fuzz/structure-aware-fuzzing",[C[33]]],["1.5. Coverage","cargo-fuzz/coverage",[C[33]]],["1.6. Targets","cargo-fuzz/targets",[C[33]]],[C[34],"cargo-fuzz/windows",[C[33]]],["1.7.1. Setup","cargo-fuzz/windows/setup",[C[33],C[34]]],["1.7.2. Fuzzing DLLs","cargo-fuzz/windows/dll-fuzzing",[C[33],C[34]]],["1.8. Fuzzing in CI","cargo-fuzz/ci",[C[33]]],[C[35],"afl",N],["2.1. Setup","afl/setup",[C[35]]],["2.2. Tutorial","afl/tutorial",[C[35]]],["2.3. Installing from source","afl/installing-from-source",[C[35]]],["3. Trophy case","trophy-case",N]]},{"name":"Rust Chalk Book","url":"https://rust-lang.github.io/chalk/book/","pages":[[C[36],"what_is_chalk",N],["1.1. Walkthrough","what_is_chalk/walkthrough",[C[36]]],["1.2. Crates","what_is_chalk/crates",[C[36]]],["1.3. REPL","what_is_chalk/repl",[C[36]]],["2. Contribution guide","contribution_guide",N],[C[37],"types",N],["3.1. The Interner","types/role_of_interner",[C[37]]],[C[38],"types/rust_types",[C[37]]],["3.2.1. Alias types","types/rust_types/alias",[C[37],C[38]]],["3.2.2. Application types","types/rust_types/application_ty",[C[37],C[38]]],["3.3. Rust lifetimes","types/rust_lifetimes",[C[37]]],[C[39],"types/operations",[C[37]]],["3.4.1. TypeFoldable and the TypeFolder trait","types/operations/fold",[C[37],C[39]]],[C[40],"clauses",N],["4.1. Goals and clauses","clauses/goals_and_clauses",[C[40]]],["4.2. Type equality and unification","clauses/type_equality",[C[40]]],["4.3. Implied bounds","clauses/implied_bounds",[C[40]]],["4.4. Lowering rules","clauses/lowering_rules",[C[40]]],["4.5. Opaque types (impl Trait)","clauses/opaque_types",[C[40]]],["4.6. Well known traits","clauses/well_known_traits",[C[40]]],["4.7. Well-formedness checking","clauses/wf",[C[40]]],["4.8. Coherence","clauses/coherence",[C[40]]],[C[41],"canonical_queries",N],["5.1. Canonicalization","canonical_queries/canonicalization",[C[41]]],[C[42],"engine",N],["6.1. Major concepts","engine/major_concepts",[C[42]]],[C[43],"engine/logic",[C[42]]],["6.2.1. Coinduction","engine/logic/coinduction",[C[42],C[43]]],["6.3. SLG Solver","engine/slg",[C[42]]],[C[44],"recursive",N],["7.1. The stack","recursive/stack",[C[44]]],["7.2. Inductive cycles","recursive/inductive_cycles",[C[44]]],["7.3. The search graph and caching","recursive/search_graph",[C[44]]],["7.4. Coinduction","recursive/coinduction",[C[44]]],["Appendix A: Glossary and terminology",C[45],N],["Appendix B: Bibliography","bibliography",N],["Appendix C: Incomplete chapters","todo",N],["Appendix D: Publishing Chalk","publishing",N]]},{"name":"Rust's Unsafe Code Guidelines Reference","url":"https://rust-lang.github.io/unsafe-code-guidelines/","pages":[[C[3],C[4],N],["2. Glossary",C[45],N],[C[46],"layout",N],["3.1. Structs and tuples","layout/structs-and-tuples",[C[46]]],["3.2. Scalars","layout/scalars",[C[46]]],["3.3. Enums","layout/enums",[C[46]]],["3.4. Unions","layout/unions",[C[46]]],["3.5. Pointers","layout/pointers",[C[46]]],["3.6. Function pointers","layout/function-pointers",[C[46]]],["3.7. Arrays and Slices","layout/arrays-and-slices",[C[46]]],["3.8. Packed SIMD vectors","layout/packed-simd-vectors",[C[46]]],[C[47],"validity",N],["4.1. Unions","validity/unions",[C[47]]],["4.2. Function Pointers","validity/function-pointers",[C[47]]],[C[48],"optimizations",N],["5.1. Return value optimization","optimizations/return_value_optimization",[C[48]]]]},{"name":"Rust Design Patterns","url":"https://rust-unofficial.github.io/patterns/","pages":[[C[3],"intro",N],["1.1. Translations","translations",[C[3]]],[C[49],"idioms/index",N],["2.1. Use borrowed types for arguments","idioms/coercion-arguments",[C[49]]],["2.2. Concatenating Strings with format!","idioms/concat-format",[C[49]]],["2.3. Constructor","idioms/ctor",[C[49]]],["2.4. The Default Trait","idioms/default",[C[49]]],["2.5. Collections Are Smart Pointers","idioms/deref",[C[49]]],["2.6. Finalisation in Destructors","idioms/dtor-finally",[C[49]]],["2.7. mem::{take(_), replace(_)}","idioms/mem-replace",[C[49]]],["2.8. On-Stack Dynamic Dispatch","idioms/on-stack-dyn-dispatch",[C[49]]],[C[50],"idioms/ffi/intro",[C[49]]],["2.9.1. Idiomatic Errors","idioms/ffi/errors",[C[49],C[50]]],["2.9.2. Accepting Strings","idioms/ffi/accepting-strings",[C[49],C[50]]],["2.9.3. Passing Strings","idioms/ffi/passing-strings",[C[49],C[50]]],["2.10. Iterating over an Option","idioms/option-iter",[C[49]]],["2.11. Pass Variables to Closure","idioms/pass-var-to-closure",[C[49]]],["2.12. Privacy For Extensibility","idioms/priv-extend",[C[49]]],["2.13. Easy doc initialization","idioms/rustdoc-init",[C[49]]],["2.14. Temporary mutability","idioms/temporary-mutability",[C[49]]],["2.15. Return consumed arg on error","idioms/return-consumed-arg-on-error",[C[49]]],[C[51],"patterns/index",N],[C[52],"patterns/behavioural/intro",[C[51]]],["3.1.1. Command","patterns/behavioural/command",[C[51],C[52]]],["3.1.2. Interpreter","patterns/behavioural/interpreter",[C[51],C[52]]],["3.1.3. Newtype","patterns/behavioural/newtype",[C[51],C[52]]],["3.1.4. RAII Guards","patterns/behavioural/RAII",[C[51],C[52]]],["3.1.5. Strategy","patterns/behavioural/strategy",[C[51],C[52]]],["3.1.6. Visitor","patterns/behavioural/visitor",[C[51],C[52]]],[C[53],"patterns/creational/intro",[C[51]]],["3.2.1. Builder","patterns/creational/builder",[C[51],C[53]]],["3.2.2. Fold","patterns/creational/fold",[C[51],C[53]]],[C[54],"patterns/structural/intro",[C[51]]],["3.3.1. Compose Structs","patterns/structural/compose-structs",[C[51],C[54]]],["3.3.2. Prefer Small Crates","patterns/structural/small-crates",[C[51],C[54]]],["3.3.3. Contain unsafety in small modules","patterns/structural/unsafe-mods",[C[51],C[54]]],[C[55],"patterns/ffi/intro",[C[51]]],["3.4.1. Object-Based APIs","patterns/ffi/export",[C[51],C[55]]],["3.4.2. Type Consolidation into Wrappers","patterns/ffi/wrappers",[C[51],C[55]]],[C[56],"anti_patterns/index",N],["4.1. Clone to satisfy the borrow checker","anti_patterns/borrow_clone",[C[56]]],["4.2. #[deny(warnings)]","anti_patterns/deny-warnings",[C[56]]],["4.3. Deref Polymorphism","anti_patterns/deref",[C[56]]],[C[57],"functional/index",N],["5.1. Programming paradigms","functional/paradigms",[C[57]]],["5.2. Generics as Type Classes","functional/generics-type-classes",[C[57]]],["5.3. Functional Optics","functional/optics",[C[57]]],[C[58],"additional_resources/index",N],["6.1. Design principles","additional_resources/design-principles",[C[58]]]]},{"name":"Learn Rust With Entirely Too Many Linked Lists","url":"https://rust-unofficial.github.io/too-many-lists/","pages":[[C[3],"index",N],[C[59],"first",N],["2.1. Layout","first-layout",[C[59]]],["2.2. New","first-new",[C[59]]],["2.3. Ownership 101","first-ownership",[C[59]]],["2.4. Push","first-push",[C[59]]],["2.5. Pop","first-pop",[C[59]]],["2.6. Testing","first-test",[C[59]]],["2.7. Drop","first-drop",[C[59]]],["2.8. Final Code","first-final",[C[59]]],[C[60],"second",N],["3.1. Option","second-option",[C[60]]],["3.2. Generic","second-generic",[C[60]]],["3.3. Peek","second-peek",[C[60]]],["3.4. IntoIter","second-into-iter",[C[60]]],["3.5. Iter","second-iter",[C[60]]],["3.6. IterMut","second-iter-mut",[C[60]]],["3.7. Final Code","second-final",[C[60]]],[C[61],"third",N],["4.1. Layout","third-layout",[C[61]]],["4.2. Basics","third-basics",[C[61]]],["4.3. Drop","third-drop",[C[61]]],["4.4. Arc","third-arc",[C[61]]],["4.5. Final Code","third-final",[C[61]]],[C[62],"fourth",N],["5.1. Layout","fourth-layout",[C[62]]],["5.2. Building","fourth-building",[C[62]]],["5.3. Breaking","fourth-breaking",[C[62]]],["5.4. Peek","fourth-peek",[C[62]]],["5.5. Symmetric Cases","fourth-symmetry",[C[62]]],["5.6. Iteration","fourth-iteration",[C[62]]],["5.7. Final Code","fourth-final",[C[62]]],[C[63],"fifth",N],["6.1. Layout","fifth-layout",[C[63]]],["6.2. Unsafe","fifth-unsafe",[C[63]]],["6.3. Basics","fifth-basics",[C[63]]],["6.4. Miri","fifth-miri",[C[63]]],["6.5. Stacked Borrows","fifth-stacked-borrows",[C[63]]],["6.6. Testing Stacked Borrows","fifth-testing-stacked-borrows",[C[63]]],["6.7. Layout + Basics Redux","fifth-layout-basics-redux",[C[63]]],["6.8. Extras","fifth-extras",[C[63]]],["6.9. Final Code","fifth-final",[C[63]]],[C[64],"sixth",N],["7.1. Layout","sixth-layout",[C[64]]],["7.2. Variance and Subtyping","sixth-variance",[C[64]]],["7.3. Basics","sixth-basics",[C[64]]],["7.4. Panic Safety","sixth-panics",[C[64]]],["7.5. Boring Combinatorics","sixth-combinatorics",[C[64]]],["7.6. Filling In Random Bits","sixth-random-bits",[C[64]]],["7.7. Testing","sixth-testing",[C[64]]],["7.8. Send, Sync, and Compile Tests","sixth-send-sync",[C[64]]],["7.9. An Introduction To Cursors","sixth-cursors-intro",[C[64]]],["7.10. Implementing Cursors","sixth-cursors-impl",[C[64]]],["7.11. Testing Cursors","sixth-cursors-testing",[C[64]]],["7.12. Final Code","sixth-final",[C[64]]],[C[65],"infinity",N],["8.1. The Double Single","infinity-double-single",[C[65]]],["8.2. The Stack-Allocated Linked List","infinity-stack-allocated",[C[65]]]]},{"name":"Rust SIMD Performance Guide","url":"https://rust-lang.github.io/packed_simd/perf-guide/introduction.html","pages":[[C[32],C[4],N],[C[66],"float-math/fp",N],["1.1. Short-vector Math Library","float-math/svml",[C[66]]],["1.2. Approximate functions","float-math/approx",[C[66]]],["1.3. Fused multiply-accumulate","float-math/fma",[C[66]]],[C[67],"target-feature/features",N],["2.1. Using RUSTFLAGS","target-feature/rustflags",[C[67]]],["2.2. Using the target_feature attribute","target-feature/attribute",[C[67]]],["2.3. Interaction with inlining","target-feature/inlining",[C[67]]],["2.4. Detecting features at runtime","target-feature/runtime",[C[67]]],["3. Bounds checking","bound_checks",N],["4. Vertical and horizontal operations","vert-hor-ops",N],[C[68],"prof/profiling",N],["5.1. Profiling on Linux","prof/linux",[C[68]]],["5.2. Using machine code analyzers","prof/mca",[C[68]]]]},{"name":C[69],"url":"https://www.lurklurk.org/effective-rust/","pages":[[C[69],"title-page",N],["Preface","preface",N],[C[70],"types",N],["1.1. Item 1: Use the type system to express your data structures","use-types",[C[70]]],["1.2. Item 2: Use the type system to express common behavior","use-types-2",[C[70]]],["1.3. Item 3: Prefer Option and Result transforms over explicit match expressions","transform",[C[70]]],["1.4. Item 4: Prefer idiomatic Error types","errors",[C[70]]],["1.5. Item 5: Understand type conversions","casts",[C[70]]],["1.6. Item 6: Embrace the newtype pattern","newtype",[C[70]]],["1.7. Item 7: Use builders for complex types","builders",[C[70]]],["1.8. Item 8: Familiarize yourself with reference and pointer types","references",[C[70]]],["1.9. Item 9: Consider using iterator transforms instead of explicit loops","iterators",[C[70]]],[C[71],"traits",N],["2.1. Item 10: Familiarize yourself with standard traits","std-traits",[C[71]]],["2.2. Item 11: Implement the Drop trait for RAII patterns","raii",[C[71]]],["2.3. Item 12: Understand the trade-offs between generics and trait objects","generics",[C[71]]],["2.4. Item 13: Use default implementations to minimize required trait methods","default-impl",[C[71]]],[C[72],"concepts",N],["3.1. Item 14: Understand lifetimes","lifetimes",[C[72]]],["3.2. Item 15: Understand the borrow checker","borrows",[C[72]]],["3.3. Item 16: Avoid writing unsafe code","unsafe",[C[72]]],["3.4. Item 17: Be wary of shared-state parallelism","deadlock",[C[72]]],["3.5. Item 18: Don't panic","panic",[C[72]]],["3.6. Item 19: Avoid reflection","reflection",[C[72]]],["3.7. Item 20: Avoid the temptation to over-optimize","optimize",[C[72]]],[C[73],"deps",N],["4.1. Item 21: Understand what semantic versioning promises","semver",[C[73]]],["4.2. Item 22: Minimize visibility",C[74],[C[73]]],["4.3. Item 23: Avoid wildcard imports","wildcard",[C[73]]],["4.4. Item 24: Re-export dependencies whose types appear in your API","re-export",[C[73]]],["4.5. Item 25: Manage your dependency graph","dep-graph",[C[73]]],["4.6. Item 26: Be wary of feature creep","features",[C[73]]],[C[76],"tooling",N],["5.1. Item 27: Document public interfaces",C[75],[C[76]]],["5.2. Item 28: Use macros judiciously","macros",[C[76]]],["5.3. Item 29: Listen to Clippy","clippy",[C[76]]],["5.4. Item 30: Write more than unit tests","testing",[C[76]]],["5.5. Item 31: Take advantage of the tooling ecosystem","use-tools",[C[76]]],["5.6. Item 32: Set up a continuous integration (CI) system","ci",[C[76]]],[C[77],"beyond-std",N],["6.1. Item 33: Consider making library code no_std compatible","no-std",[C[77]]],["6.2. Item 34: Control what crosses FFI boundaries","ffi",[C[77]]],["6.3. Item 35: Prefer bindgen to manual FFI mappings","bindgen",[C[77]]],["Afterword","afterword",N],["Index","indexing",N]]},{"name":"Rust for the Polyglot Programmer","url":"https://www.chiark.greenend.org.uk/~ianmdlvl/rust-polyglot/","pages":[["Contents","index",N],["1. Introduction and overview","intro",N],["2. Syntax","syntax",N],["3. Types and patterns","types",N],["4. Ownership, memory model","ownership",N],["5. Traits, methods","traits",N],["6. Safety, threadsafety","safety",N],["7. Error handling","errors",N],["8. Macros and metaprogramming","macros",N],["9. Async Rust","async",N],["10. FFI","ffi",N],["11. Documentation and testing","rustdoc",N],["12. Stability",C[90],N],["13. Cargo","cargo",N],["14. Libraries","libs",N],["15. Colophon","colophon",N]]},{"name":C[78],"url":"https://ruspiro.github.io/ruspiro-async-book/","pages":[[C[78],"cover",N],[C[3],"01-00-introduction",N],["1.1. Motivation","01-01-motivation",[C[3]]],[C[79],"02-00-terminology",N],["2.1. Future","02-01-future",[C[79]]],["2.2. Executor","02-02-executor",[C[79]]],["2.3. Async","02-03-async",[C[79]]],["2.4. Await","02-04-await",[C[79]]],[C[80],"03-00-build-the-runtime",N],["3.1. The Thought","03-01-the-thought",[C[80]]],["3.2. The First Naive Brain","03-02-first-brain",[C[80]]],["3.3. The Context and the Waker","03-03-context-and-waker",[C[80]]],["3.4. MPMC - Channel","03-04-mpmc-channel",[C[80]]],["3.5. The simple Brain","03-05-simple-brain",[C[80]]],["4. Proof the Runtime","04-00-proof-runtime",N],["5. Conclusion","05-00-conclusion",N],["The Author","author",N]]},{"name":"Roguelike Tutorial - In Rust","url":"https://bfnightly.bracketproductions.com/","pages":[[C[32],"chapter_0",N],["1. Building for the Web","webbuild",N],[C[81],"chapter_1",N],["2.1. Entities and Components","chapter_2",[C[81]]],["2.2. Walking A Map","chapter_3",[C[81]]],["2.3. A More Interesting Map","chapter_4",[C[81]]],["2.4. Field of View","chapter_5",[C[81]]],["2.5. Monsters","chapter_6",[C[81]]],["2.6. Dealing Damage","chapter_7",[C[81]]],["2.7. User Interface","chapter_8",[C[81]]],["2.8. Items and Inventory","chapter_9",[C[81]]],["2.9. Ranged Scrolls/Targeting","chapter_10",[C[81]]],["2.10. Saving and Loading","chapter_11",[C[81]]],["2.11. Delving Deeper","chapter_12",[C[81]]],["2.12. Difficulty","chapter_13",[C[81]]],["2.13. Equipment","chapter_14",[C[81]]],[C[82],"chapter_15",N],["3.1. Nice Walls with Bitsets","chapter_16",[C[82]]],["3.2. Bloodstains","chapter_17",[C[82]]],["3.3. Particle Effects","chapter_18",[C[82]]],["3.4. Hunger Clock","chapter_19",[C[82]]],["3.5. Magic Mapping","chapter_20",[C[82]]],["3.6. REX Paint Menu","chapter_21",[C[82]]],["3.7. Simple Traps","chapter_22",[C[82]]],[C[83],"chapter23-prefix",N],["4.1. Refactor Map Building","chapter_23",[C[83]]],["4.2. Map Building Test Harness","chapter_24",[C[83]]],["4.3. BSP Room Dungeons","chapter_25",[C[83]]],["4.4. BSP Interior Design","chapter_26",[C[83]]],["4.5. Cellular Automata Maps","chapter_27",[C[83]]],["4.6. Drunkard's Walk Maps","chapter_28",[C[83]]],["4.7. Mazes and Labyrinths","chapter_29",[C[83]]],["4.8. Diffusion-limited aggregation maps","chapter_30",[C[83]]],["4.9. Add symmetry and brushes to the library","chapter_31",[C[83]]],["4.10. Voronoi Hive Maps","chapter_32",[C[83]]],["4.11. Wave Function Collapse","chapter_33",[C[83]]],["4.12. Prefabs & Sectionals","chapter_34",[C[83]]],["4.13. Room Vaults","chapter_35",[C[83]]],["4.14. Layering/Builder Chaining","chapter_36",[C[83]]],["4.15. Fun With Layers","chapter_37",[C[83]]],["4.16. Room Builders","chapter_38",[C[83]]],["4.17. Better Corridors","chapter_39",[C[83]]],["4.18. Doors","chapter_40",[C[83]]],["4.19. Decouple map size from screen size","chapter_41",[C[83]]],["4.20. Section 3 Conclusion","chapter_42",[C[83]]],[C[84],"chapter_43",N],["5.1. Design Document","chapter_44",[C[84]]],["5.2. Raw Files, Data-Driven Design","chapter_45",[C[84]]],["5.3. Data-Driven Spawn Tables","chapter_46",[C[84]]],["5.4. Making the town","chapter_47",[C[84]]],["5.5. Populating the town","chapter_48",[C[84]]],["5.6. Living bystanders","chapter_49",[C[84]]],["5.7. Game Stats","chapter_50",[C[84]]],["5.8. Equipment","chapter_51",[C[84]]],["5.9. User Interface","chapter_52",[C[84]]],["5.10. Into the Woods!","chapter_53",[C[84]]],["5.11. XP","chapter_54",[C[84]]],["5.12. Backtracking","chapter_55",[C[84]]],["5.13. Into the caverns","chapter_56",[C[84]]],["5.14. Better AI","chapter_57",[C[84]]],["5.15. Spatial Indexing Revisited","chapter_57a",[C[84]]],["5.16. Item Stats and Vendors","chapter_58",[C[84]]],["5.17. Deep caverns","chapter_59",[C[84]]],["5.18. Cavern to Dwarf Fort","chapter_60",[C[84]]],["5.19. Town Portals","chapter_61",[C[84]]],["5.20. Magic Items","chapter_62",[C[84]]],["5.21. Effects","chapter_63",[C[84]]],["5.22. Cursed Items","chapter_64",[C[84]]],["5.23. Even More Items","chapter_65",[C[84]]],["5.24. Magic Spells","chapter_66",[C[84]]],["5.25. Enter the Dragon","chapter_67",[C[84]]],["5.26. Mushrooms","chapter_68",[C[84]]],["5.27. More Shrooms","chapter_69",[C[84]]],["5.28. Ranged Combat","chapter_70",[C[84]]],["5.29. Logging","chapter_71",[C[84]]],["5.30. Text Layers","chapter_72",[C[84]]],["5.31. Systems/Dispatch","chapter_73",[C[84]]],["5.32. Dark Elf City 1","chapter_74",[C[84]]],["6. Contributors","contributors",N],["7. Licensing","license",N]]},{"name":"Wasmtime docs","url":"https://docs.wasmtime.dev/","pages":[[C[3],C[4],N],[C[85],"cli",N],["2.1. Installation","cli-install",[C[85]]],["2.2. CLI Options","cli-options",[C[85]]],["2.3. CLI Logging","cli-logging",[C[85]]],["2.4. Cache Configuration","cli-cache",[C[85]]],[C[86],"lang",N],["3.1. Hello, world!","examples-hello-world",[C[86]]],["3.2. Calculating the GCD","examples-gcd",[C[86]]],["3.3. Using Linear Memory","examples-memory",[C[86]]],["3.4. Linking Modules","examples-linking",[C[86]]],["3.5. anyref Reference Type","examples-anyref",[C[86]]],["3.6. externref Reference Type","examples-externref",[C[86]]],["3.7. Multiple Memories","examples-multimemory",[C[86]]],["3.8. Using Multi-Value","examples-multi-value",[C[86]]],["3.9. Serializing Modules","examples-serialize",[C[86]]],["3.10. Multithreaded Embedding","examples-multithreaded-embedding",[C[86]]],["3.11. WASIp1","examples-wasip1",[C[86]]],[C[87],"examples-wasip2",[C[86]]],["3.12.1. An Application with Plugins","wasip2-plugins",[C[86],C[87]]],["3.13. Core Dumps","examples-core-dumps",[C[86]]],["3.14. Memory Protection Keys","examples-mpk",[C[86]]],["3.15. Async Host Functions","examples-async",[C[86]]],[C[88],"examples-debugging",[C[86]]],["3.16.1. Debugging with gdb and lldb","examples-debugging-native-debugger",[C[86],C[88]]],["3.16.2. Debugging with Core Dumps","examples-debugging-core-dumps",[C[86],C[88]]],[C[89],"examples-profiling",[C[86]]],["3.17.1. Profiling with Perf","examples-profiling-perf",[C[86],C[89]]],["3.17.2. Profiling with VTune","examples-profiling-vtune",[C[86],C[89]]],["3.17.3. Profiling with samply","examples-profiling-samply",[C[86],C[89]]],["3.17.4. Cross-platform Profiling","examples-profiling-guest",[C[86],C[89]]],["3.18. Building a Minimal Embedding","examples-minimal",[C[86]]],["3.19. Portable Interpretation","examples-pulley",[C[86]]],["3.20. Pre-Compiling Wasm","examples-pre-compiling-wasm",[C[86]]],["3.21. Fast Execution","examples-fast-execution",[C[86]]],["3.22. Fast Instantiation","examples-fast-instantiation",[C[86]]],["3.23. Fast Compilation","examples-fast-compilation",[C[86]]],["3.24. Interrupting Execution","examples-interrupting-wasm",[C[86]]],["3.25. Deterministic Execution","examples-deterministic-wasm-execution",[C[86]]],["3.26. Checking Guests' Memory Accesses","wmemcheck",[C[86]]],[C[91],C[90],N],["4.1. Release Process","stability-release",[C[91]]],["4.2. Tiers of support","stability-tiers",[C[91]]],["4.3. Platform Support","stability-platform-support",[C[91]]],["4.4. Wasm Proposals","stability-wasm-proposals",[C[91]]],[C[92],"security",N],["5.1. Disclosure Policy","security-disclosure",[C[92]]],["5.2. What is considered a security bug?","security-what-is-considered-a-security-vulnerability",[C[92]]],["5.3. Vulnerability runbook","security-vulnerability-runbook",[C[92]]],[C[94],C[93],N],["6.1. Architecture","contributing-architecture",[C[94]]],["6.2. Building","contributing-building",[C[94]]],["6.3. Testing","contributing-testing",[C[94]]],["6.4. Fuzzing","contributing-fuzzing",[C[94]]],["6.5. CI","contributing-ci",[C[94]]],["6.6. Reducing Test Cases","contributing-reducing-test-cases",[C[94]]],["6.7. Cross Compiling","contributing-cross-compiling",[C[94]]],["6.8. Coding Guidelines","contributing-coding-guidelines",[C[94]]],["6.9. Development Process","contributing-development-process",[C[94]]],["6.10. RFC Process","contributing-rfc-process",[C[94]]],["6.11. Implementing Wasm Proposals","contributing-implementing-wasm-proposals",[C[94]]],[C[95],"contributing-maintainer-guidelines",[C[94]]],["6.12.1. Code Review","contributing-code-review",[C[94],C[95]]],["6.12.2. Release Process","contributing-release-process",[C[94],C[95]]],["6.13. Conditional Compilation","contributing-conditional-compilation",[C[94]]],["6.14. Governance","contributing-governance",[C[94]]],["6.15. Code of Conduct","contributing-coc",[C[94]]]]}];export default booksIndex;