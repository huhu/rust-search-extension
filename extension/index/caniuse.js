var caniuseIndex=[["1.10","weak_new","downgraded_weak","`sync::Weak::new`",null],["1.10","cstr_default",null,"`Default` implementation for `&CStr`",null],["1.10","cstring_default",null,"`Default` implementation for `CString`",null],["1.4","use_group_renaming",null,"item renamings in import groups",null],["1.14","dotdot_in_tuple_patterns","dotdot_in_tuple_patterns","`..` in tuple (struct) patterns",1492],["1.14","fn_ptr_to_unsafe_fn_ptr",null,"`fn` pointer to `unsafe fn` pointer coercion",null],["1.14","println_no_args",null,"`println!` without arguments",null],["1.61","termination_trait_lib",null,"the `Termination` trait",null],["1.61","vec_retain_mut",null,"`Vec::retain_mut`",null],["1.61","vec_from_array_mut_ref",null,"`From<&mut [T; N]>` implementation for `Vec<T>`",null],["1.61","joinhandle_is_finished",null,"`JoinHandle::is_finished`",null],["1.61","vecdeque_retain_mut",null,"`VecDeque::retain_mut`",null],["1.61","write_cursor_array",null,"`Write` implementation for `Cursor<[u8; N]>`",null],["1.61","const_fn_fn_ptr_basics","const_fn_fn_ptr_basics","`const fn` returning function pointers",null],["1.61","const_impl_trait","const_impl_trait","`const fn` returning `impl Trait`",null],["1.61","const_fn_trait_bound","const_fn_trait_bound","Trait bounds on generics of a `const fn`",null],["1.61","vec_from_array_ref",null,"`From<&[T; N]>` implementation for `Vec<T>`",null],["1.61","pin_static_ref","pin_static_ref","`Pin::static_ref`",null],["1.61","unix_socket_creation","unix_socket_creation","`unix::net::SocketAddr::from_pathname`",null],["1.61","process_exitcode",null,"`process::ExitCode`",null],["1.61","pin_static_mut","pin_static_ref","`Pin::static_mut`",null],["1.36","string_borrow_mut_str",null,"`BorrowMut<str>` implementation for `String`",null],["1.36","maybe_uninit","maybe_uninit","`mem::MaybeUninit`",1892],["1.36","string_from_string_ref",null,"`From<&String>` implementation for `String`",null],["1.36","nll_2015",null,"Non-Lexical Lifetimes (NLL) on the 2015 edition",null],["1.36","const_nonnull_cast","const_nonnull_cast","`NonNull::cast` as `const fn`",null],["1.36","dbg_multiple_args",null,"multiple arguments in `dbg!` macro invocations",null],["1.36","const_layout_from_size_align_unchecked",null,"`alloc::Layout::from_size_align_unchecked` as `const fn`",null],["1.36","alloc","alloc","the `alloc` crate",null],["1.36","io_cursor_default",null,"`Default` implementation for `io::Cursor`",null],["1.36","const_nonnull_dangling","const_nonnull_dangling","`NonNull::dangling` as `const fn`",null],["1.36","hashbrown",null,"`hashbrown::HashMap` as the implementation of `HashMap`",null],["1.36","const_needs_drop","const_needs_drop","`mem::needs_drop` as `const fn`",null],["1.57","vecdeque_try_reserve","try_reserve","`VecDeque::try_reserve`",null],["1.57","hashset_try_reserve","try_reserve","`HashSet::try_reserve`",null],["1.57","array_as_slice","array_as_slice","`<[T; N]>::as_slice`",null],["1.57","vec_try_reserve","try_reserve","`Vec::try_reserve`",null],["1.57","proc_macro_is_available","proc_macro_is_available","`proc_macro::is_available`",null],["1.57","const_panic","const_panic","panicking in `const` contexts",null],["1.57","macro_attrs_in_derive_output","macro_attributes_in_derive_output","attribute macros after derive macros, on the same item",null],["1.57","string_try_reserve_exact","try_reserve","`String::try_reserve_exact`",null],["1.57","iter_map_while","iter_map_while","`Iterator::map_while`",null],["1.57","hashmap_try_reserve","try_reserve","`HashMap::try_reserve`",null],["1.57","array_as_mut_slice","array_as_slice","`<[T; N]>::as_mut_slice`",null],["1.57","vecdeque_try_reserve_exact","try_reserve","`VecDeque::try_reserve_exact`",null],["1.57","string_try_reserve","try_reserve","`String::try_reserve`",null],["1.57","vec_try_reserve_exact","try_reserve","`Vec::try_reserve_exact`",null],["1.43","iter_once_with","iter_once_with","`iter::once_with`",null],["1.43","from_utf8_error_partial_eq",null,"`PartialEq` implementation for `FromUtf8Error`",null],["1.43","string_as_mut",null,"`AsMut<str>` implementation for `String`",null],["1.43","from_utf8_error_clone",null,"`Clone` implementation for `FromUtf8Error`",null],["1.43","if_attr",null,"attributes on `if` expressions",null],["1.43","boxed_slice_try_from","boxed_slice_try_from","`TryFrom` implementations from boxed slices to boxed arrays",null],["1.43","once_is_completed","once_is_completed","`sync::once::Once::is_completed`",null],["1.43","from_utf8_error_eq",null,"`Eq` implementation for `FromUtf8Error`",null],["1.43","extra_log_consts","extra_log_consts","`{f32, f64}::{LOG2_10, LOG10_2}`",null],["1.43","core_primitive","core_primitive","`core::primitive`",null],["1.43","assoc_int_consts","assoc_int_consts","numeric constants as associated constants",null],["1.43","const_ascii_methods_on_intrinsics","const_ascii_methods_on_intrinsics","`u8::is_ascii` as `const fn`",null],["1.43","cstring_from_vec_of_nonzerou8",null,"`From<Vec<NonZeroU8>>` implementation for `CString`",null],["1.47","vec_leak","vec_leak","`Vec::leak`",null],["1.47","cstr_range_from",null,"`Index<RangeFrom>` implementation for `CStr`",null],["1.47","proc_macro_raw_ident","proc_macro_raw_ident","`proc_macro::Ident::new_raw`",null],["1.47","const_type_id","const_type_id","`TypeId::of` in `const fn`",null],["1.47","array_gt_32_impls",null,"`[T; N]` trait implementations with N > 32",null],["1.47","result_deref","inner_deref","`as_deref` and `as_deref_mut` on `Result`",null],["1.47","range_full_default",null,"`Default` implementation for `RangeFull`",null],["1.47","tau_constant","tau_constant","the `TAU` constant",null],["1.47","range_default",null,"`Default` implementation for `Range`",null],["1.23","unsized_ptr_as_mut",null,"`as_mut` on `*mut T`",null],["1.23","unsized_ptr_as_ref",null,"`as_ref` on pointers to unsized types",null],["1.8","augmented_assignments","augmented_assignments","assignment operator overloading",null],["1.8","braced_empty_structs","braced_empty_structs","empty structs and enum variants with braces",218],["1.25","repr_align","repr_align","`#[repr(align(N))]`",1358],["1.25","use_nested_groups","use_nested_groups","nested groups in imports",2128],["1.25","match_beginning_vert","match_beginning_vert","`|` at the beginning of match arms",1925],["1.46","const_transmute","const_transmute","`mem::transmute` in constants",null],["1.46","const_if_match","const_if_match","`if` and `match` in constant evaluation",2342],["1.46","const_loop","const_loop","`loop` and `while` in constant evaluation",2344],["1.46","leading_ones","leading_trailing_ones","`leading_ones` integer methods",null],["1.46","vec_intoiter_as_ref",null,"`AsRef<[T]>` implementation for `vec::IntoIter<T>`",null],["1.46","trailing_ones","leading_trailing_ones","`trailing_ones` integer methods",null],["1.46","track_caller","track_caller","the `#[track_caller]` attribute",2091],["1.46","partialeq_vec_for_ref_slice","partialeq_vec_for_ref_slice","`PartialEq<Vec<_>>` implementations for slices",null],["1.46","vec_drain_as_slice","vec_drain_as_slice","`std::vec::Drain::as_slice`",null],["1.46","const_forget","const_forget","`mem::forget` as `const fn`",null],["1.46","vec_drain_as_ref",null,"`AsRef<[T]>` implementation for `vec::Drain<'_, T>`",null],["1.46","option_zip","option_zip","`Option::zip`",null],["1.46","nested_tuple_indexing",null,"nested tuple indexing without parentheses (`tuple.0.0`)",null],["1.46","const_slice_cast",null,"array to slice casts and coercions in `const fn`",null],["1.46","from_char_for_string",null,"`From<char>` implementation for `String`",null],["1.18","pub_restricted","pub_restricted","`pub(restricted)` visibilities",1422],["1.18","windows_subsystem","windows_subsystem","`#![windows_subsystem]`",null],["1.5","vec_resize","vec_resize","`Vec::resize`",509],["1.5","fs_canonicalize","fs_canonicalize","`fs::canonicalize`",1044],["1.65","backtrace","backtrace","`std::backtrace`",2504],["1.29","proc_macro","proc_macro","procedural macros",null],["1.7","vec_as_slice","vec_as_slice","`Vec::as_slice`",null],["1.7","string_as_mut_str","string_as_str","`String::as_mut_str`",null],["1.7","vec_as_mut_slice","vec_as_slice","`Vec::as_mut_slice`",null],["1.7","string_as_str","string_as_str","`String::as_str`",null],["1.16","self_struct_expr_pat",null,"`Self` in struct expressions and patterns",null],["1.16","assoc_ty_struct_expr_pat",null,"associated types in struct expressions and patterns",null],["1.16","writeln_no_args",null,"`writeln!` without arguments",null],["1.34","unrestricted_attribute_tokens","unrestricted_attribute_tokens","arbitrary token streams in procedural attribute macros",null],["1.34","deprecated_equals_reason",null,"`#[deprecated = \"reason\"]` as a shorthand for `#[deprecated(note = \"reason\")]`",null],["1.34","alternative_registries",null,"alternative registries to crates.io in cargo",null],["1.34","const_overflowing_neg",null,"`overflowing_neg` as `const fn`",null],["1.34","const_wrapping_neg",null,"`wrapping_neg` as `const fn`",null],["1.34","extern_crate_self","extern_crate_self","`extern crate self as foo;`",null],["1.20","unimplemented_macro_args",null,"`unimplemented!` with a message",null],["1.20","compile_error","compile_error_macro","`compile_error!`",1695],["1.20","struct_field_attributes","struct_field_attributes","attributes on struct literal fields",null],["1.20","associated_consts","associated_consts","associated constants in `trait` and `impl` blocks",null],["1.51","wake_trait","wake_trait","the `Wake` trait",null],["1.51","empty_seek",null,"`io::Seek` implementation for `io::Empty`",null],["1.51","nonzero_rem",null,"`Rem<NonZeroU{0}>` implementation for `u{0}`",null],["1.51","iterator_reduce","iterator_fold_self","`Iterator::reduce`",null],["1.51","array_value_iter","array_value_iter","by-value `[T; N]` iterator `core::array::IntoIter`",null],["1.51","nonzero_div",null,"`Div<NonZeroU{0}>` implementation for `u{0}`",null],["1.51","box_send_sync_any_downcast","box_send_sync_any_downcast","`Box::<dyn Any + Send + Sync>::downcast`",null],["1.51","arc_decrement_strong_count","arc_mutate_strong_count","`Arc::decrement_strong_count`",null],["1.51","seek_stream_position","seek_convenience","`io::Seek::stream_position`",null],["1.51","poll_map_ok","poll_map","`Poll<Option<Result<T, E>>>::map_ok`",null],["1.51","slice_fill_with","slice_fill_with","`slice::fill_with`",null],["1.51","unsigned_abs","unsigned_abs","the `unsigned_abs` method on signed integers",null],["1.51","min_const_generics","min_const_generics","simple const generics",null],["1.51","error_by_ref",null,"`Error` implementation for `&(impl Error)`",null],["1.51","arc_increment_strong_count","arc_mutate_strong_count","`Arc::increment_strong_count`",null],["1.51","slice_strip_suffix","slice_strip","`slice::strip_suffix`",null],["1.51","str_as_mut",null,"`AsMut<str>` implementation for `str`",null],["1.51","poll_map_err","poll_map","`Poll<Option<Result<T, E>>>::map_err`",null],["1.51","slice_strip_prefix","slice_strip","`slice::strip_prefix`",null],["1.2","iter_empty","iter_empty","`iter::empty`",null],["1.2","iter_once","iter_once","`iter::once`",null],["1.2","atomic_ptr_send",null,"`Send` implementation for `AtomicPtr`",null],["1.42","transparent_enums","transparent_enums","`#[repr(transparent)]` on single-variant enums",null],["1.42","eq_cursor",null,"`PartialEq` and `Eq` implementations for `io::Cursor`",null],["1.42","iter_empty_send_sync","iter_empty_send_sync","unconditional `Send` and `Sync` implementations for `iter::Empty<T>`",null],["1.42","manually_drop_take","manually_drop_take","`ManuallyDrop::take`",null],["1.42","slice_from_raw_parts","slice_from_raw_parts","`ptr::slice_from_raw_parts_mut`",null],["1.42","alloc_layout_const_new","alloc_layout_const_new","`alloc::Layout::new` as `const fn`",null],["1.42","wait_until","wait_until","`Condvar::wait_while`",null],["1.42","debug_map_key_value","debug_map_key_value","`DebugMap::value`",null],["1.42","slice_patterns","slice_patterns","subslice patterns (`[a, .., b]` and `[a, xs @ .., b]`)",null],["1.42","matches_macro","matches_macro","`matches!`",null],["1.42","wait_timeout_until","wait_timeout_until","`Condvar::wait_timeout_while`",null],["1.42","attr_on_inline_mod",null,"attribute macros on inline modules",null],["1.42","proc_macro_extern_prelude",null,"the `proc_macro` crate without `extern crate` in procedural macro crates",null],["1.63","const_slice_from_ref",null,"`slice::from_ref` as `const fn`",null],["1.63","vecdeque_write",null,"`io::Write` implementation for `VecDeque<u8>`",null],["1.63","path_try_exists",null,"`Path::try_exists`",null],["1.63","binaryheap_try_reserve","try_reserve_2","`BinaryHeap::try_reserve`",null],["1.63","refmut_filter_map","cell_filter_map","`cell::RefMut::filter_map`",null],["1.63","const_mutex_new",null,"`Mutex::new` as `const fn`",null],["1.63","const_array_from_ref",null,"`array::from_ref` as `const fn`",null],["1.63","pathbuf_try_reserve_exact","try_reserve_2","`PathBuf::try_reserve_exact`",null],["1.63","const_condvar_new",null,"`Condvar::new` as `const fn`",null],["1.63","osstring_try_reserve_exact","try_reserve_2","`OsString::try_reserve_exact`",null],["1.63","toowned_clone_into","toowned_clone_into","`ToOwned::clone_into`",null],["1.63","pathbuf_try_reserve","try_reserve_2","`PathBuf::try_reserve`",null],["1.63","binaryheap_try_reserve_exact","try_reserve_2","`BinaryHeap::try_reserve_exact`",null],["1.63","box_into_pin","box_into_pin","`Box::into_pin`",null],["1.63","ref_filter_map","cell_filter_map","`cell::Ref::filter_map`",null],["1.63","vecdeque_read",null,"`io::Read` implementation for `VecDeque<u8>`",null],["1.63","nonzero_checked_ops","nonzero_checked_ops","checked numeric operations for `NonZero*`",null],["1.63","const_rwlock_new",null,"`RwLock::new` as `const fn`",null],["1.63","osstring_try_reserve","try_reserve_2","`OsString::try_reserve`",null],["1.63","nonnull_slice_ptr_len",null,"`NonNull<[T]>::len`",null],["1.53","duration_zero","duration_zero","`Duration::ZERO`",null],["1.53","non_ascii_idents","non_ascii_idents","non-ASCII identifiers",null],["1.53","btreeset_retain","btree_retain","`BTreeSet::retain`",null],["1.53","nonzero_trailing_zeros","nonzero_leading_trailing_zeros","`NonZero*::trailing_zeros`",null],["1.53","int_bits_const","int_bits_const","Associated `BITS` constants for integer types",null],["1.53","duration_is_zero","duration_zero","`Duration::is_zero`",null],["1.53","array_from_mut","array_from_ref","`std::array::from_mut`",null],["1.53","slice_iter_mut_as_slice","slice_iter_mut_as_slice","`slice::IterMut::as_slice`",null],["1.53","bufreader_seek_relative","bufreader_seek_relative","`BufReader::seek_relative`",null],["1.53","atomic_ptr_fetch_update","atomic_fetch_update","`AtomicPtr::fetch_update`",null],["1.53","btreemap_retain","btree_retain","`BTreeMap::retain`",null],["1.53","or_patterns","or_patterns","nested or-patterns",null],["1.53","vec_extend_from_within","vec_extend_from_within","`Vec::extend_from_within`",null],["1.53","osstr_ascii","osstring_ascii","ASCII methods on `OsStr`",null],["1.53","slice_iter_mut_as_ref",null,"`AsRef<[T]>` implementation for `slice::IterMut<'_, T>`",null],["1.53","atomic_bool_fetch_update","atomic_fetch_update","`AtomicBool::fetch_update`",null],["1.53","float_is_subnormal","is_subnormal","`{f32, f64}::is_subnormal`",null],["1.53","array_from_ref","array_from_ref","`std::array::from_ref`",null],["1.53","nonzero_leading_zeros","nonzero_leading_trailing_zeros","`NonZero*::leading_zeros`",null],["1.17","cell_non_copy","cell_non_copy","`Cell` with non-`Copy` types",1651],["1.17","field_init_shorthand","field_init_shorthand","field init shorthands (`x` for `x: x` in struct initializers)",1682],["1.17","where_clauses_with_self",null,"`Self` in the where clause of trait impl's",1647],["1.17","static_in_const","static_in_const","elision of `'static` lifetimes in `static`s and `const`s",1623],["1.17","static_recursion","static_recursion","recursive static items",null],["1.40","mem_take","mem_take","`mem::take`",null],["1.40","udpsocker_peer_addr","udp_peer_addr","`UdpSocket::peer_addr`",null],["1.40","todo_macro","todo_macro","`todo!`",null],["1.40","modern_meta_macro_pattern",null,"the `meta` fragment specifier in `macro_rules!` for modern attribute syntax",null],["1.40","macros_in_extern","macros_in_extern","macro invocations in `extern {}` blocks",null],["1.40","option_deref","option_deref","`as_deref` and `as_deref_mut` on `Option`",null],["1.40","slice_repeat","repeat_generic_slice","`slice::repeat`",null],["1.40","const_is_power_of_two",null,"`is_power_of_two` as `const fn`",null],["1.40","cfg_doctest","cfg_doctest","`#[cfg(doctest)]`",null],["1.40","proc_macro_generated_macro_rules",null,"proc-macros that generate `macro_rules!` macros",null],["1.40","option_flattening","option_flattening","`Option::flatten`",null],["1.40","type_proc_macros",null,"function-like procedural macros in type position",null],["1.40","const_constructor","const_constructor","tuple struct and tuple variant constructors in `const fn`",null],["1.40","float_to_from_bytes","float_to_from_bytes","float ↔ bytes conversion functions",null],["1.40","non_exhaustive","non_exhaustive","`#![non_exhaustive]`",2008],["1.40","map_get_key_value","map_get_key_value","`get_key_value` on `HashMap` and `BTreeMap`",null],["1.48","const_option_is_some","const_option","`Option::is_some` as `const fn`",null],["1.48","const_ordering_reverse","const_ordering","`cmp::Ordering::reverse` as `const fn`",null],["1.48","doc_alias","doc_alias","`#[doc(alias = \"…\")]`",null],["1.48","const_result_is_err","const_result","`Result::is_err` as `const fn`",null],["1.48","future_ready","future_readiness_fns","`future::ready`",null],["1.48","const_ordering_then","const_ordering","`cmp::Ordering::then` as `const fn`",null],["1.48","const_result_is_ok","const_result","`Result::is_ok` as `const fn`",null],["1.48","array_try_from_vec",null,"`TryFrom<Vec<T>>` implementation for `[T; N]`",null],["1.48","write_sink_ref",null,"`Write` implementation for `&Sink`",null],["1.48","future_pending","future_readiness_fns","`future::pending`",null],["1.48","const_option_as_ref","const_option","`Option::as_ref` as `const fn`",null],["1.48","const_option_is_none","const_option","`Option::is_none` as `const fn`",null],["1.48","slice_ptr_range","slice_ptr_range","slice to pointer range methods",null],["1.48","const_result_as_ref","const_result","`Result::as_ref` as `const fn`",null],["1.48","write_child_stdin_ref",null,"`Write` implementation for `&ChildStdin`",null],["1.48","write_stderr_ref",null,"`Write` implementation for `&Stderr`",null],["1.48","write_stdout_ref",null,"`Write` implementation for `&Stdout`",null],["1.48","deque_make_contiguous","deque_make_contiguous","`VecDeque::make_contiguous`",null],["1.48","intra_doc_links",null,"intra-doc links",null],["1.33","irrefutable_let_patterns","irrefutable_let_patterns","irrefutable patterns in `if let` and `while let`",2086],["1.33","cfg_target_vendor","cfg_target_vendor","`cfg(target_vendor)`",null],["1.33","const_let","const_let","let bindings, assignments and destructuring in `const fn`",2341],["1.33","const_ip","const_ip","`Ipv4Addr::new` as `const fn`",null],["1.33","pin","pin","`pin::Pin`",null],["1.33","exhaustive_integer_patterns","exhaustive_integer_patterns","integer match exhaustiveness checking",2591],["1.33","underscore_imports","underscore_imports","underscore imports (impl-only trait imports)",2166],["1.33","cfg_attr_multi","cfg_attr_multi","`#[cfg_attr(cfg, attr1, attr2, attr3)]`",2539],["1.33","min_const_unsafe_fn","min_const_unsafe_fn","`const unsafe fn`s inside `unsafe` blocks in `const fn`",null],["1.33","rc_arc_pin_method_receiver",null,"`Rc`, `Arc` or `Pin` as a method receiver",null],["1.33","if_while_or_patterns","if_while_or_patterns","or-patterns in `if let` and `while let`",2175],["1.33","phantom_unpinned","pin","`marker::PhantomUnpinned`",null],["1.33","repr_packed","repr_packed","`#[repr(packed(N))]` on structs",1399],["1.33","unpin","pin","`marker::Unpin`",null],["1.15","proc_macro_derive","proc_macro","procedural derive macros (macros 1.1)",1681],["1.52","char_partial_eq_punct",null,"`PartialEq<proc_macro::Punct>` implementation for `char`",null],["1.52","const_char_len_utf8","const_char_len_utf","`char::len_utf8` as `const fn`",null],["1.52","const_char_len_utf16","const_char_len_utf","`char::len_utf16` as `const fn`",null],["1.52","str_rsplit_once","str_split_once","`str::rsplit_once`",null],["1.52","arc_error",null,"`Error` implementation for `Arc<impl Error>`",null],["1.52","const_u8_to_ascii_lowercase","const_ascii_methods_on_intrinsics","`u8::to_ascii_lowercase` as `const fn`",null],["1.52","const_u8_eq_ignore_ascii_case","const_ascii_methods_on_intrinsics","`u8::eq_ignore_ascii_case` as `const fn`",null],["1.52","const_char_to_ascii_lowercase","const_ascii_methods_on_intrinsics","`char::to_ascii_lowercase` as `const fn`",null],["1.52","const_char_to_ascii_uppercase","const_ascii_methods_on_intrinsics","`char::to_ascii_uppercase` as `const fn`",null],["1.52","str_split_once","str_split_once","`str::split_once`",null],["1.52","const_u8_to_ascii_uppercase","const_ascii_methods_on_intrinsics","`u8::to_ascii_uppercase` as `const fn`",null],["1.52","const_char_eq_ignore_ascii_case","const_ascii_methods_on_intrinsics","`char::eq_ignore_ascii_case` as `const fn`",null],["1.9","deprecated","deprecated","`#[deprecated]`",1270],["1.12","cfg_attr_path",null,"`cfg_attr` on `path` attributes",null],["1.12","nested_macro_rules",null,"`macro_rules!` within `macro_rules!`",null],["1.27","proc_ident",null,"`proc` as an identifier",null],["1.27","macro_lifetime_matcher","macro_lifetime_matcher","the `lifetime` fragment specifier in `macro_rules!`",null],["1.27","dyn_trait","dyn_trait","`dyn Trait` as a syntax for trait objects",null],["1.27","termination_trait_test","termination_trait_test","types implementing `Termination` as the return type for `#[test]`s",null],["1.27","cfg_target_feature","cfg_target_feature","`#[cfg(target_feature = \"...\")]`",null],["1.27","generic_param_attrs","generic_param_attrs","attributes on generic parameters",1327],["1.27","fn_must_use","fn_must_use","`#[must_use]` on functions",1940],["1.27","target_feature",null,"`#[target_feature(...)]`",null],["1.19","closure_to_fn_coercion","closure_to_fn_coercion","non-capturing closure to function pointer coercion",1558],["1.19","eprintln","eprint","`eprintln!`",1869],["1.19","untagged_unions","untagged_unions","`union`s",1444],["1.19","eprint","eprint","`eprint!`",null],["1.19","relaxed_adts","relaxed_adts","numeric fields in struct expressions and patterns",null],["1.19","loop_break_value","loop_break_value","`break` with a value inside `loop`s",1624],["1.30","extern_absolute_paths","extern_absolute_paths","absolute paths as paths from other crates",null],["1.30","tool_attributes","tool_attributes","tool-scoped attributes",null],["1.30","attr_literals","attr_literals","non-string literals in attribute lists and values of key-value pairs",null],["1.30","raw_identifiers","raw_identifiers","raw identifiers (`r#keyword`)",null],["1.30","crate_in_paths","crate_in_paths","`crate` in paths",null],["1.30","use_extern_macro","use_extern_macro","macro imports and reexports via the module system",null],["1.30","used","used","`#[used]`",null],["1.30","panic_handler","panic_handler","`#[panic_handler]`",null],["1.30","macro_vis_matcher","macro_vis_matcher","the `vis` fragment specifier in `macro_rules!`",null],["1.30","non_modrs_mods","non_modrs_mods","`foo.rs` as an alternative to `foo/mod.rs`",null],["1.30","infer_outlives_requirements","infer_outlives_requirements","outlives requirement inference",2093],["1.30","proc_macro_path_invoc","proc_macro_path_invoc","multi-segment paths in attributes and derives",null],["1.58","saturating_div","saturating_div","`{integer}::saturating_div`",null],["1.58","cstring_from_vec_with_nul","cstring_from_vec_with_nul","`CString::from_vec_with_nul`",null],["1.58","char_array_pattern",null,"`Pattern` implementation for `[char; N]`",null],["1.58","is_symlink","is_symlink","`is_symlink` methods",null],["1.58","with_options","with_options","`File::options`",null],["1.58","format_args_capture","format_args_capture","implicit named arguments for formatting macros",2795],["1.58","option_result_unwrap_unchecked","option_result_unwrap_unchecked","`unwrap_unchecked` methods",null],["1.58","const_raw_ptr_deref","const_raw_ptr_deref","`*const T` dereferences in `const` contexts",null],["1.58","cstring_from_vec_with_nul_unchecked","cstring_from_vec_with_nul","`CString::from_vec_with_nul_unchecked`",null],["1.22","drop_types_in_const","drop_types_in_const","`Drop` types in constants",1440],["1.54","hashmap_into_keys","map_into_keys_values","`HashMap::into_keys`",null],["1.54","hashmap_into_values","map_into_keys_values","`HashMap::into_values`",null],["1.54","btreemap_into_values","map_into_keys_values","`BTreeMap::into_values`",null],["1.54","btreemap_into_keys","map_into_keys_values","`BTreeMap::into_keys`",null],["1.54","extended_key_value_attrs","extended_key_value_attributes","macro expansion in key-value attributes",null],["1.59","const_unreachable_unchecked","const_unreachable_unchecked","`unreachable_unchecked` as `const fn`",null],["1.59","hashmap_entry_insert","entry_insert","`hash_map::Entry::insert_entry`",null],["1.59","const_maybe_uninit_assume_init_ref","const_maybe_uninit_assume_init","`MaybeUninit::assume_init_ref` as `const fn`",null],["1.59","control_flow_is_break","control_flow_enum","`ControlFlow::is_break`",null],["1.59","available_parallelism","available_parallelism","`std::thread::available_parallelism`",null],["1.59","const_cstr_unchecked","const_cstr_unchecked","`CStr::from_bytes_with_nul_unchecked` as `const fn`",null],["1.59","result_cloned","result_cloned","`Result::cloned`",null],["1.59","u8_from_char",null,"`TryFrom<char>` implementation for `u8`",null],["1.59","const_maybe_uninit_assume_init","const_maybe_uninit_assume_init","`MaybeUninit::assume_init` as `const fn`",null],["1.59","asm","asm","inline assembly",null],["1.59","result_copied","result_copied","`Result::copied`",null],["1.59","hashmap_vacant_entry_insert","entry_insert","`hash_map::VacantEntry::insert_entry`",null],["1.59","result_copied_err","result_cloned","`Result::cloned_err`",null],["1.59","control_flow_is_continue","control_flow_enum","`ControlFlow::is_continue`",null],["1.59","iter_zip","iter_zip","`core::iter::zip`",null],["1.59","thread_local_const_init","thread_local_const_init","const-initialized thread locals",null],["1.59","result_cloned_err","result_copied","`Result::copied_err`",null],["1.59","const_maybe_uninit_as_ptr","const_maybe_uninit_as_ptr","`MaybeUninit::as_ptr` as `const fn`",null],["1.59","const_generics_defaults","const_generics_defaults","defaults for const generics",null],["1.62","bool_then_some","bool_to_option","`bool::then_some`",null],["1.62","derive_default_enum",null,"the `Default` derive macro on enums with a `#[default]` attribute",3107],["1.62","stdlin_lines","stdin_forwarders","`Stdin::lines`",null],["1.31","extern_crate_item_prelude","extern_crate_item_prelude","`extern crate foo as bar;`",null],["1.31","tool_lints","tool_lints","scoped lints",null],["1.31","min_const_fn","min_const_fn","`const fn`",911],["1.31","pattern_parentheses","pattern_parentheses","parentheses in patterns",null],["1.31","edition_2018",null,"the 2018 edition",null],["1.31","impl_header_lifetime_elision","impl_header_lifetime_elision","lifetime elision in `impl` headers",null],["1.35","dbg_no_args",null,"`dbg!` without arguments",null],["1.35","asraw_stdio_locks",null,"`AsRawFd` implementation for `StdinLock`, `StdoutLock` and `StderrLock`",null],["1.35","boxed_closure_impls","boxed_closure_impls","boxed closure `Fn*` trait implementations",null],["1.35","alloc_system_default",null,"`Default` implementation for `alloc::System`",null],["1.35","coerce_closure_to_unsafe_fn_ptr",null,"closure to unsafe function pointer coercions",null],["1.35","exact_size_case_mapping_iter",null,"`ExactSizeIterator` implementation for `ToLowercase` and `ToUppercase`",null],["1.45","proc_macro_span_mixed_site","proc_macro_mixed_site","`proc_macro::Span::mixed_site`",null],["1.45","atomic_min_max","atomic_min_max","`AtomicN::{fetch_min, fetch_max}`",null],["1.45","btreemap_remove_entry","btreemap_remove_entry","`BTreeMap::remove_entry`",null],["1.45","nonzero_bitor_assign","nonzero_bitor","`BitOrAssign` implementations for `NonZero` integer types",null],["1.45","rc_from_cow",null,"`From<Cow<'_, T>>`` implementation for ``Rc<T>`",null],["1.45","unicode_version","unicode_version","`std::char::UNICODE_VERSION`",null],["1.45","nonzero_bitor","nonzero_bitor","`BitOr` implementations for `NonZero` integer types",null],["1.45","expr_proc_macro","proc_macro_hygiene","function-like procedural macros in expression, pattern and statement position",null],["1.45","arc_from_cow",null,"`From<Cow<'_, T>>` implementation for `Arc<T>`",null],["1.45","proc_macro_span_located_at","proc_macro_span_located_at","`proc_macro::Span::located_at`",null],["1.45","proc_macro_span_resolved_at","proc_macro_span_resolved_at","`proc_macro::Span::resolved_at`",null],["1.45","atomic_fetch_update","no_more_cas","`AtomicN::fetch_update`",null],["1.45","box_from_cow","box_from_cow","`From<Cow<'_, _>>` implementations for `Box`ed types",null],["1.32","dbg_macro","dbg_macro","`dbg!`",2361],["1.32","must_use_traits",null,"`#[must_use]` on traits",null],["1.32","const_slice_as_ptr","const_slice_as_ptr","`slice::as_ptr` as `const fn`",null],["1.32","boxed_slice_from_iter",null,"`FromIterator<T>` implementation for `Box<[T]>`",null],["1.32","int_to_from_bytes","int_to_from_bytes","integer ↔ bytes conversion functions",null],["1.32","const_non_null_as_ptr","const_nonnull_as_ptr","`NonNull::as_ptr` as `const fn`",null],["1.32","self_in_typedefs","self_in_typedefs","`Self` in type definitions",2300],["1.32","const_cell_as_ptr","const_cell_as_ptr","`Cell::as_ptr` as `const fn`",null],["1.32","macro_literal_matcher","macro_literal_matcher","the `literal` fragment specifier in `macro_rules!`",1576],["1.32","const_cstr_as_ptr","const_str_as_ptr","`CStr::as_ptr` as `const fn`",null],["1.32","const_duration_subsec_millis","duration_consts","`Duration::subsec_millis` as `const fn`",null],["1.32","const_range_inclusive_start","const_inclusive_range_methods","`RangeInclusive::start` as `const fn`",null],["1.32","const_str_as_ptr","const_str_as_ptr","`str::as_ptr` as `const fn`",null],["1.32","macro_at_most_once_rep","macro_at_most_once_rep","`?` as the Kleene \"at most one\" operator in `macro_rules!` in the 2018 edition",2298],["1.32","const_ipv4addr_is_unspecified","const_ipv4","`Ipv4Addr::is_unspecified` as `const fn`",null],["1.32","const_manually_drop_into_inner","const_manually_drop","`ManuallyDrop::into_inner` as `const fn`",null],["1.32","const_duration_subsec_nanos","duration_consts","`Duration::subsec_nanos` as `const fn`",null],["1.32","const_range_inclusive_end","const_inclusive_range_methods","`RangeInclusive::end` as `const fn`",null],["1.32","const_iter_empty","const_iter_empty","`iter::empty` as `const fn`",null],["1.32","self_struct_ctor","self_struct_ctor","`Self` as a constructor and pattern for unit and tuple structs",2302],["1.32","uniform_paths","uniform_paths","uniform paths (`use x::y;` as `use self::x::y;`) in the 2018 edition",null],["1.32","const_ipv6addr_octets","const_ipv6","`Ipv6Addr::octets` as `const fn`",null],["1.32","const_char_is_ascii","const_ascii_methods_on_intrinsics","`char::is_ascii` as `const fn`",null],["1.32","const_ipv6addr_new","const_ipv6","`Ipv6Addr::new` as `const fn`",null],["1.32","const_duration_subsec_micros","duration_consts","`Duration::subsec_micros` as `const fn`",null],["1.32","const_duration_as_secs","duration_consts","`Duration::as_secs` as `const fn`",null],["1.32","const_manually_drop_new","const_manually_drop","`ManuallyDrop::new` as `const fn`",null],["1.32","path_from_str",null,"`FromStr` implementation for `PathBuf`",null],["1.32","const_unsafe_cell_get","const_unsafecell_get","`UnsafeCell::get` as `const fn`",null],["1.56","io_sink_clone",null,"`Clone` implementation for `io::Sink`",null],["1.56","unix_chroot","unix_chroot","`std::os::unix::fs::chroot`",null],["1.56","io_empty_copy",null,"`Copy` implementation for `io::Empty`",null],["1.56","const_fn_transmute","const_fn_transmute","`mem::transmute` in `const fn`",null],["1.56","io_empty_default",null,"`Default` implementation for `io::Empty`",null],["1.56","std_collections_from_array",null,"`From<[T; N]>` implementation for collections",null],["1.56","shrink_to","shrink_to","the `shrink_to` method on collections",null],["1.56","unsafe_cell_raw_get","unsafe_cell_raw_get","`UnsafeCell::raw_get`",null],["1.56","io_empty_clone",null,"`Clone` implementation for `io::Empty`",null],["1.56","extend_for_tuple",null,"`Extend<A, B>` implementation for `(Extend<A>, Extend<B>)`",null],["1.56","bufwriter_into_parts","bufwriter_into_parts","`BufWriter::into_parts`",null],["1.56","io_sink_default",null,"`Default` implementation for `io::Sink`",null],["1.56","const_fn_union","const_fn_union","`union` field access in `const fn`",null],["1.56","rust_version",null,"`rust-version` in Cargo.toml",2495],["1.56","io_sink_copy",null,"`Copy` implementation for `io::Sink`",null],["1.60","slice_escape_ascii","inherent_ascii_escape","`[u8]::escape_ascii`",null],["1.60","namespaced_features",null,"namespaced Cargo features",null],["1.60","rc_new_cyclic","arc_new_cyclic","`Rc::new_cyclic`",null],["1.60","not_never",null,"`Not` implementation for `!`",null],["1.60","weak_dep_features",null,"Weak Cargo dependency features",null],["1.60","vec_spare_capacity","vec_spare_capacity","`Vec::spare_capacity_mut`",null],["1.60","maybe_uninit_assume_init_drop","maybe_uninit_extra","`MaybeUninit::assume_init_drop`",null],["1.60","u8_escape_ascii","inherent_ascii_escape","`u8::escape_ascii`",null],["1.60","arc_new_cyclic","arc_new_cyclic","`Arc::new_cyclic`",null],["1.60","maybe_uninit_assume_init_read","maybe_uninit_extra","`MaybeUninit::assume_init_read`",null],["1.60","cfg_panic",null,"`#[cfg(panic = ...)]`",null],["1.55","range_from_patterns","half_open_range_patterns","\"RangeFrom\" patterns (`a..`)",null],["1.55","bound_cloned","bound_cloned","`Bound::cloned`",null],["1.55","control_flow","control_flow_enum_type","the `ControlFlow` enum",null],["1.55","maybe_uninit_write","maybe_uninit_write","`MaybeUninit::write`",null],["1.55","array_map","array_map","`[T; N]::map`",null],["1.55","proc_macro_group_span_close","proc_macro_group_span","`Group::span_close`",null],["1.55","proc_macro_group_span_open","proc_macro_group_span","`Group::span_open`",null],["1.3","time","time","`std::time`",null],["1.3","duration","duration","`std::time::Duration`",null],["1.0","while_let","while_let","`while let` expressions",null],["1.0","macro_rules","macro_rules","`macro_rules!`",null],["1.0","struct_variant","struct_variant","struct variants in enums",null],["1.0","associated_types","associated_types","associated types in traits",null],["1.0","if_let","if_let","`if let` expressions",null],["1.0","tuple_indexing","tuple_indexing","tuple indexing",null],["1.0","slicing_syntax","slicing_syntax","`&foo[a..b]` as slicing syntax",null],["1.0","default_type_params","default_type_params","type parameter defaults",null],["1.6","no_std","no_std","`#![no_std]`",null],["1.37","copy_within","copy_within","`[T]::copy_within`",null],["1.37","reverse_bits","reverse_bits","`reverse_bits` integer methods",null],["1.37","underscore_const_names","underscore_const_names","`_` as an identifier for constants",null],["1.37","type_alias_enum_variants",null,"enum variants through a type alias",null],["1.37","repr_align_enum","repr_align_enum","`#[repr(align(N)]` on enums",null],["1.37","generic_param_cfg_attrs",null,"conditional compilation of generic parameters",null],["1.37","option_xor","option_xor","`Option::xor`",null],["1.37","kleene_op_2015",null,"the `?` Kleene macro operator in the 2015 edition",null],["1.11","nested_cfg_attr",null,"nested `cfg_attr` attributes",null],["unstable","const_io_cursor_position","const_io_structs","`io::Cursor::position` as `const fn`",null],["unstable","termination_trait_lib",null,"`Termination` implementation for `Result<Infallible, E>`",null],["unstable","const_io_cursor_get_ref","const_io_structs","`io::Cursor::get_ref` as `const fn`",null],["unstable","custom_inner_attributes","custom_inner_attributes","custom inner attributes",null],["unstable","vec_drain_filter","drain_filter","`Vec:::drain_filter`",null],["unstable","const_in_array_repeat_expressions","const_in_array_repeat_expressions","constants in array repeat expressions",2203],["unstable","const_ptr_write_unaligned","const_ptr_write","pointer `write_unaligned` as `const fn`",null],["unstable","specialization","specialization","specialization",null],["unstable","cfg_version","cfg_version","`#[cfg(version(..))]`",null],["unstable","pub_macro_rules","pub_macro_rules","module scoping for `macro_rules!` macros",null],["unstable","const_mut_refs","const_mut_refs","`&mut T` in `const` contexts",null],["unstable","no_core","no_core","`#![no_core]`",null],["unstable","cstring_from_vec_with_nul","cstring_from_vec_with_nul","nul-terminated `Vec<u8>` to `CString` conversions",null],["unstable","associated_type_defaults","associated_type_defaults","default values for associated types",null],["unstable","btreemap_try_insert","map_try_insert","`BTreeMap::try_insert`",null],["unstable","type_alias_impl_trait","type_alias_impl_trait","`impl Trait` in type aliases",2515],["unstable","option_unzip","unzip_option","`Option::unzip`",null],["unstable","linkedlist_drain_filter","drain_filter","`LinkedList:::drain_filter`",null],["unstable","const_io_empty","const_io_structs","`io::empty` as `const fn`",null],["unstable","const_io_cursor_new","const_io_structs","`io::Cursor::new` as `const fn`",null],["unstable","result_contains","option_result_contains","`Result::contains`",null],["unstable","cfg_target_has_atomic","cfg_target_has_atomic","`cfg(target_has_atomic = ...)`",null],["unstable","link_cfg","link_cfg","`#[link(..., cfg(...))]`",null],["unstable","proc_macro_diagnostics","proc_macro_diagnostics","procedural macro diagnostics",null],["unstable","cow_is_owned","cow_is_borrowed","`Cow::is_owned`",null],["unstable","thread_local","thread_local","`#[thread_local]` on `static`s",null],["unstable","cow_is_borrowed","cow_is_borrowed","`Cow::is_borrowed`",null],["unstable","raw_ref_op","raw_ref_op","the raw reference operator (`&raw [mut | const] $place`)",2582],["unstable","const_generics","const_generics","const generics",2000],["unstable","naked_functions","naked_functions","`#[naked]` functions",null],["unstable","exclusive_range_pattern","exclusive_range_pattern","exclusive range patterns (`a..b`)",null],["unstable","exhaustive_patterns","exhaustive_patterns","exhaustive pattern matching on types that contain uninhabited types",1872],["unstable","const_btreeset_new","const_btree_new","`BTreeSet::new` as `const fn`",null],["unstable","register_tool","register_tool","`#![register_tool]`",null],["unstable","generic_associated_types","generic_associated_types","generic associated types",1598],["unstable","nonnull_slice_from_raw_parts","nonnull_slice_from_raw_parts","`NonNull<[T]>::slice_from_raw_parts`",null],["unstable","half_open_range_patterns","half_open_range_patterns","half-open range patterns",null],["unstable","scoped_threads","scoped_threads","scoped threads",null],["unstable","hashmap_try_insert","map_try_insert","`HashMap::try_insert`",null],["unstable","is_sorted_slice","is_sorted","`is_sorted` method family on slices",2351],["unstable","duration_checked_float","duration_checked_float","`Duration::try_from_secs_*`",null],["unstable","never_type","never_type","the never type (`!`)",null],["unstable","option_contains","option_result_contains","`Option::contains`",null],["unstable","derive_default_enum","derive_default_enum","`#[derive(Default)]` on enums",null],["unstable","const_io_sink","const_io_structs","`io::sink` as `const fn`",null],["unstable","generators","generators","generators",2033],["unstable","link_args","link_args","`#[link_args]`",null],["unstable","nonzero_is_power_of_two","nonzero_is_power_of_two","`NonZeroU*::is_power_of_two`",null],["unstable","total_cmp","total_cmp","the `total_cmp` method on float types",null],["unstable","stmt_expr_attributes","stmt_expr_attributes","attributes on expressions",16],["unstable","type_ascription","type_ascription","type ascription",803],["unstable","default_free_fn","default_free_fn","the free `default` function (shorthand for `Default::default`)",null],["unstable","abi_thiscall","abi_thiscall","`thiscall` calling convention",null],["unstable","box_into_boxed_slice","box_into_boxed_slice","`Box::into_boxed_slice`",null],["unstable","option_zip_with","option_zip","`Option::zip_with`",null],["unstable","assert_matches","assert_matches","`assert_matches!`",null],["unstable","const_btreemap_new","const_btree_new","`BTreeMap::new` as `const fn`",null],["unstable","poll_ready","poll_ready","`Poll::ready` / `task::Ready`",null],["unstable","plugin_registrar","plugin_registrar","`#[plugin_registrar]`",null],["unstable","plugin","plugin","`#![plugin(...)]`",null],["unstable","is_sorted_iterator","is_sorted","`is_sorted` method family on `Iterator`",2351],["unstable","const_ptr_write","const_ptr_write","pointer `write` as `const fn`",null],["unstable","slice_ptr_len","slice_ptr_len","the `len` method on raw slices",null],["unstable","try_blocks","try_blocks","`try` blocks",243],["unstable","try_trait_v2","try_trait_v2","the `Try` trait",3058],["unstable","slice_take","slice_take","`take` method family on slices",null],["unstable","const_io_repeat","const_io_structs","`io::repeat` as `const fn`",null],["1.28","repr_transparent","repr_transparent","`#[repr(transparent)]` on newtype structs",null],["1.28","pure_ident",null,"`pure` as an identifier",2421],["1.28","global_allocator","global_allocator","`#[global_allocator]`",null],["1.28","sizeof_ident",null,"`sizeof` as an identifier",2421],["1.28","offsetof_ident",null,"`offsetof` as an identifier",2421],["1.28","alignof_ident",null,"`alignof` as an identifier",2421],["1.44","ioslice_clone",null,"`Clone` implementation for `io::IoSlice`",null],["1.44","osstring_deref_mut",null,"`DerefMut` implementation for `OsString`",null],["1.44","ioslice_copy",null,"`Copy` implementation for `io::IoSlice`",null],["1.44","path_buf_with_capacity","path_buf_capacity","`PathBuf::with_capacity`",null],["1.44","alloc_layout_pad_to_align","alloc_layout_extras","`alloc::Layout::pad_to_align`",null],["1.44","path_buf_reserve","path_buf_capacity","`PathBuf::reserve`",null],["1.44","vec_from_array",null,"`From<[T; N]>` implementation for `Vec<T>`",null],["1.44","float_approx_unchecked_to","float_approx_unchecked_to","unchecked float → int conversion",null],["1.44","path_buf_reserve_exact","path_buf_capacity","`PathBuf::reserve_exact`",null],["1.44","no_std_async_await",null,"`async` / `.await` in `#[no_std]` crates",null],["1.44","lexerror_error",null,"`Error` implementation for `proc_macro::LexError`",null],["1.44","osstring_indexmut_rangefull",null,"`IndexMut<RangeFull>` implementation for `OsString`",null],["1.44","path_buf_capacity","path_buf_capacity","`PathBuf::capacity`",null],["1.44","alloc_layout_align_to","alloc_layout_extras","`alloc::Layout::align_to`",null],["1.44","convert_infallible_hash",null,"`Hash` implementation for `convert::Infallible`",null],["1.44","lexerror_display",null,"`Display` implementation for `proc_macro::LexError`",null],["1.44","const_int_to_from_bytes",null,"integer ↔ bytes conversion functions as `const fn`",null],["1.44","path_buf_clear","path_buf_capacity","`PathBuf::clear`",null],["1.44","alloc_layout_extend","alloc_layout_extras","`alloc::Layout::extend`",null],["1.44","path_buf_shrink_to_fit","path_buf_capacity","`PathBuf::shrink_to_fit`",null],["1.44","alloc_layout_array","alloc_layout_extras","`alloc::Layout::array`",null],["1.44","from_mut_str_for_string",null,"`From<&mut str>` implementation for `String`",null],["1.24","abi_sysv64","abi_sysv64","the sysV64 ABI on any platform",null],["1.24","unsized_ptr_is_null",null,"`is_null` on pointers to unsized types",null],["1.50","f32_clamp","clamp","`f32::clamp`",1961],["1.50","const_ipv6addr_is_loopback","const_ipv6","`Ipv6Addr::is_loopback` as `const fn`",null],["1.50","const_ipaddr_is_multicast","const_ip","`IpAddr::is_multicast` as `const fn`",null],["1.50","const_ipv4addr_is_private","const_ipv4","`Ipv4Addr::is_private` as `const fn`",null],["1.50","const_ipv6addr_to_ipv4","const_ipv6","`Ipv6Addr::to_ipv4` as `const fn`",null],["1.50","or_insert_with_key","or_insert_with_key","`Entry::or_insert_with_key`",null],["1.50","const_ipaddr_is_loopback","const_ip","`IpAddr::is_loopback` as `const fn`",null],["1.50","const_ipv4addr_octets","const_ipv4","`Ipv4Addr::octets` as `const fn`",null],["1.50","slice_fill","slice_fill","`slice::fill`",null],["1.50","ord_clamp","clamp","`Ord::clamp`",1961],["1.50","bool_then","lazy_bool_to_option","`bool::then`",null],["1.50","const_ipaddr_is_unspecified","const_ip","`IpAddr::is_unspecified` as `const fn`",null],["1.50","refcell_take","refcell_take","`RefCell::take`",null],["1.50","const_ipv4addr_to_ipv6_mapped","const_ipv4","`Ipv4Addr::to_ipv6_mapped` as `const fn`",null],["1.50","const_ipv6addr_segments","const_ipv6","`Ipv6Addr::segments` as `const fn`",null],["1.50","const_ipaddr_is_ipv4","const_ip","`IpAddr::is_ipv4` as `const fn`",null],["1.50","const_ipv4addr_is_documentation","const_ipv4","`Ipv4Addr::is_documentation` as `const fn`",null],["1.50","const_ipv6addr_is_unspecified","const_ipv6","`Ipv6Addr::is_unspecified` as `const fn`",null],["1.50","const_ipaddr_is_ipv6","const_ip","`IpAddr::is_ipv6` as `const fn`",null],["1.50","const_ipv4addr_is_broadcast","const_ipv4","`Ipv4Addr::is_broadcast` as `const fn`",null],["1.50","const_ipv4addr_is_link_local","const_ipv4","`Ipv4Addr::is_link_local` as `const fn`",null],["1.50","assign_manually_drop_in_unions",null,"safe assignment to `ManuallyDrop<T>` in `union`s",null],["1.50","const_ipv4addr_is_multicast","const_ipv4","`Ipv4Addr::is_multicast` as `const fn`",null],["1.50","const_ipv4addr_to_ipv6_compatible","const_ipv4","`Ipv4Addr::to_ipv6_compatible` as `const fn`",null],["1.50","f64_clamp","clamp","`f64::clamp`",1961],["1.50","const_ipv4addr_is_loopback","const_ipv4","`Ipv4Addr::is_loopback` as `const fn`",null],["1.50","unsafe_cell_get_mut","unsafe_cell_get_mut","`UnsafeCell::get_mut`",null],["1.50","punct_partial_eq_char",null,"`PartialEq<char>` implementation for `proc_macro::Punct`",null],["1.50","const_ipv6addr_is_multicast","const_ipv6","`Ipv6Addr::is_multicast` as `const fn`",null],["1.26","underscore_lifetimes","underscore_lifetimes","placeholder lifetimes (`'_`)",2115],["1.26","dotdoteq_in_patterns","dotdoteq_in_patterns","inclusive ranges in patterns",1192],["1.26","match_default_bindings","match_default_bindings","default match binding modes",2005],["1.26","conservative_impl_trait","conservative_impl_trait","`impl Trait` in function return types",null],["1.26","termination_trait","termination_trait","types implementing `Termination` as the return type for `fn main()`",null],["1.26","i128_type","i128_type","128 bit integer types",null],["1.26","const_indexing","const_indexing","array indexing in constants",null],["1.26","universal_impl_trait","universal_impl_trait","`impl Trait` in function arguments",null],["1.26","inclusive_range_syntax","inclusive_range_syntax","inclusive range syntax",1192],["1.26","copy_closures",null,"`Copy` implementation for applicable closures",2132],["1.26","clone_closures",null,"`Clone` implementation for applicable closures",2132],["1.13","debug_assert_ne","assert_ne","`debug_assert_ne!`",1653],["1.13","type_macros","type_macros","`macro_rules!` macros in type position",null],["1.13","question_mark","question_mark","the `?` operator",243],["1.13","assert_ne","assert_ne","`assert_ne!`",1653],["1.39","await","async_await","`.await`",null],["1.39","bind_by_move_pattern_guards","bind_by_move_pattern_guards","shared references to bind-by-move patterns in `match` arms' guards",null],["1.39","pin_into_inner","pin_into_inner","`Pin::into_inner`",null],["1.39","instant_saturating_duration_since","checked_duration_since","`Instant::saturating_duration_since`",null],["1.39","const_str_len","const_str_len","`str::len` as `const fn`",null],["1.39","async","async_await","`async`",null],["1.39","const_slice_len","const_slice_len","`[T]::len` as `const fn`",null],["1.39","const_str_as_bytes",null,"`str::as_bytes` as `const fn`",null],["1.39","const_vec_new","const_vec_new","`Vec::new` as `const fn`",null],["1.39","param_attrs","param_attrs","attributes on function parameters",null],["1.39","const_string_new","const_string_new","`String::new` as `const fn`",null],["1.39","const_linkedlist_new","const_linked_list_new","`LinkedList::new` as `const fn`",null],["1.39","instant_checked_duration_since","checked_duration_since","`Instant::checked_duration_since`",null],["1.49","const_poll_is_pending","const_poll","`Poll::is_pending` as `const fn`",null],["1.49","partialeq_vec_for_slice","partialeq_vec_for_slice","`impl<A, B> PartialEq<Vec<B>> for [A] where A: PartialEq<B>`",null],["1.49","partialeq_slice_for_vec","partialeq_vec_for_slice","`impl<A, B> PartialEq<[B]> for Vec<A> where A: PartialEq<B>`",null],["1.49","manually_drop_in_unions","untagged_unions","`ManuallyDrop<T>` in `union`s",null],["1.49","nzint_try_from_nzint","nzint_try_from_nzint_conv","`TryFrom` conversions between `NonZero` integer types",null],["1.49","empty_enum_to_int",null,"uninhabited enum to integer casts",null],["1.49","move_ref_pattern","move_ref_pattern","move and reference bindings in the same match pattern",null],["1.49","const_poll_is_ready","const_poll","`Poll::is_ready` as `const fn`",null],["1.41","re_rebalance_coherence","re_rebalance_coherence","relaxed coherence rules",null],["1.41","weak_counts","weak_counts","`Weak` count methods",null],["1.41","result_map_or","result_map_or","`Result::map_or`",null],["1.41","maybe_uninit_debug",null,"`Debug` implementation for `MaybeUninit<T>`",null],["1.41","cfg_doc","doc_cfg","`#[cfg(doc)]`",null],["1.41","core_panic_info","core_panic_info","the `core::panic` module",null],["1.41","result_map_or_else","result_map_or_else","`Result::map_or_else`",null],["1.64","future_poll_fn","future_poll_fn","`core::future::poll_fn`",null],["1.64","arc_asfd",null,"`AsFd` implementation for `Arc<T>`",null],["1.64","windows_filetypeext",null,"`std::os::windows::fs::FileTypeExt`",null],["1.64","core_cstr","core_c_str","`CStr` in `core`",null],["1.64","let_chains","let_chains","if- and while-let-chains",null],["1.64","box_asfd",null,"`AsFd` implementation for `Box<T>`",null],["1.64","core_ffi_c","core_ffi_c","type aliases for C's arithmetic types in `core::ffi`",null],["1.64","into_future","into_future","the `IntoFuture` trait",null],["1.64","alloc_cstr","alloc_c_str","`CString` in `alloc`",null],["1.64","ready_macro","ready_macro","`task::ready!`",null],["1.38","duration_mul_f64","duration_float","`Duration::mul_f64`",null],["1.38","duration_div_f32","duration_float","`Duration::div_f32`",null],["1.38","unpin_ptr","duration_float","`Unpin` implementations for pointers",null],["1.38","thread_accesserror_partialeq",null,"`PartialEq` implementation for `thread::AccessError`",null],["1.38","str_chars_debug",null,"`Debug` implementation for `std::str::Chars`",null],["1.38","duration_div_f64","duration_float","`Duration::div_f64`",null],["1.38","duration_from_secs_f32","duration_float","`Duration::from_secs_f32`",null],["1.38","duration_mul_f32","duration_float","`Duration::mul_f32`",null],["1.38","iter_take_double_ended",null,"`DoubleEndedIterator` implementation for `iter::Take`",null],["1.38","thread_accesserror_copy",null,"`Copy` implementation for `thread::AccessError`",null],["1.38","any_type_name","type_name","`any::type_name`",null],["1.38","shared_from_iter",null,"`FromIterator<T>` implementation for `Rc<T>` and `Arc<T>`",null],["1.38","thread_accesserror_error",null,"`Error` implementation for `thread::AccessError`",null],["1.38","iter_peekable_double_ended",null,"`DoubleEndedIterator` implementation for `iter::Peekable`",null],["1.38","duration_as_secs_f64","duration_float","`Duration::as_secs_f64`",null],["1.38","duration_as_secs_f32","duration_float","`Duration::as_secs_f32`",null],["1.38","ascii_escapedefault_clone",null,"`Clone` implementation for `ascii::EscapeDefault`",null],["1.38","euclidean_division","euclidean_division","euclidean division & modulo",null],["1.38","global_allocator_in_submodules",null,"`#[global_allocator]` inside submodules",null],["1.38","iter_step_by_double_ended",null,"`DoubleEndedIterator` implementation for `iter::StepBy`",null],["1.38","ascii_escapedefault_display",null,"`Display` implementation for `ascii::EscapeDefault`",null],["1.38","duration_from_secs_f64","duration_float","`Duration::from_secs_f64`",null],["1.38","ptr_cast","ptr_cast","`cast` method on pointers",null],["1.38","thread_accesserror_clone",null,"`Clone` implementation for `thread::AccessError`",null],["1.38","thread_accesserror_eq",null,"`Eq` implementation for `thread::AccessError`",null],["1.38","deprecated_macros",null,"`#[deprecated]` on macros",null],["1.1","split_whitespace","split_whitespace","`str::split_whitespace`",1054]];