[
  {
    "advisory": {
      "id": "RUSTSEC-2020-0119",
      "package": "ticketed_lock",
      "title": "ReadTicket and WriteTicket should only be sendable when T is Send",
      "description": "Affected versions of this crate unconditionally implemented `Send` for `ReadTicket<T>` & `WriteTicket<T>`.\nThis allows to send non-Send `T` to other threads.\n\nThis can allows creating data races by cloning types with internal mutability and sending them to other threads (as `T` of `ReadTicket<T>`/`WriteTicket<T>`). Such data races can cause memory corruption or other undefined behavior.\n\nThe flaw was corrected in commit a986a93 by adding `T: Send` bounds to `Send` impls of `ReadTicket<T>`/`WriteTicket<T>`.",
      "date": "2020-11-17",
      "aliases": [
        "CVE-2020-36439",
        "GHSA-77m6-x95j-75r5",
        "GHSA-gq4h-f254-7cw9"
      ],
      "related": [],
      "collection": "crates",
      "categories": [
        "memory-corruption",
        "thread-safety"
      ],
      "keywords": [],
      "cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "informational": null,
      "references": [],
      "source": null,
      "url": "https://github.com/kvark/ticketed_lock/issues/7",
      "withdrawn": null,
      "license": "CC0-1.0"
    },
    "affected": null,
    "versions": {
      "patched": [
        ">=0.3.0"
      ],
      "unaffected": []
    }
  }
]