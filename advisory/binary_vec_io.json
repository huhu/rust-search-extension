[
  {
    "advisory": {
      "id": "RUSTSEC-2025-0109",
      "package": "binary_vec_io",
      "title": "Out-of-bounds memory access in binary_read_to_ref and binary_write_from_ref",
      "description": "Safe functions accept a single `&T` or `&mut T` but multiply by `n` to create slices extending beyond allocated memory when `n > 1`.\n\nThese functions use `from_raw_parts` to create slices larger than the underlying allocation, violating memory safety.\n\nThe binary_vec_io repository is archived and unmaintained.",
      "date": "2025-10-21",
      "aliases": [],
      "related": [],
      "collection": "crates",
      "categories": [
        "memory-corruption"
      ],
      "keywords": [
        "buffer-overflow",
        "soundness"
      ],
      "cvss": null,
      "informational": "unsound",
      "references": [],
      "source": null,
      "url": "https://github.com/RustSec/advisory-db/pull/2428",
      "withdrawn": null,
      "license": "CC0-1.0"
    },
    "affected": {
      "arch": [],
      "os": [],
      "functions": {
        "binary_vec_io::binary_read_to_ref": [
          "<=0.1.12"
        ],
        "binary_vec_io::binary_write_from_ref": [
          "<=0.1.12"
        ]
      }
    },
    "versions": {
      "patched": [],
      "unaffected": []
    }
  }
]